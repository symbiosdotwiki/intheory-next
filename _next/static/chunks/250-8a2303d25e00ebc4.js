(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[250],{5284:function(e,n,t){var A={"./Feedback.js":3175,"./Hoping.js":7302,"./Particles.js":8264,"src/app/Tracks/Feedback.js":3175,"src/app/Tracks/Hoping.js":7302,"src/app/Tracks/Particles.js":8264};function o(e){return t(r(e))}function r(e){if(!t.o(A,e)){var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return A[e]}o.keys=function(){return Object.keys(A)},o.resolve=r,e.exports=o,o.id=5284},4110:function(e,n,t){var A={"./default/add.fs":4345,"./default/black.fs":1928,"./default/circle.fs":2204,"./default/decode.fs":2967,"./default/default.fs":2565,"./default/default.vs":3972,"./default/encode.fs":3697,"./default/particleDraw.fs":2930,"./default/particleDraw.vs":5557,"./default/particleInit.fs":1307,"./default/particleInit.vs":1489,"./default/random.fs":897,"./feedback/life.fs":7635,"./hoping/skin.fs":4310,"./mediaToggle.fs":1486,"./mediaplayer.fs":9350,"./miniplayer.fs":2695,"./particles/blur.fs":43,"./particles/composite.fs":3350,"./particles/copy.fs":3778,"./particles/feedback.fs":6425,"./particles/lookup.fs":3003,"./particles/particlePhysics.fs":406,"./particles/particlePhysics.vs":9715,"./particles/phong.fs":4422,"./yinyang.fs":7562};function o(e){return t(r(e))}function r(e){if(!t.o(A,e)){var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return A[e]}o.keys=function(){return Object.keys(A)},o.resolve=r,e.exports=o,o.id=4110},4345:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution1;\nuniform vec2 resolution2;\nuniform sampler2D tex1;\nuniform sampler2D tex2;\n\nvoid main() {\n	vec2 uv1 = gl_FragCoord.xy / resolution1;\n	vec2 uv2 = gl_FragCoord.xy / resolution1;\n	gl_FragColor = texture2D(tex1, uv1) + texture2D(tex2, uv2);\n}"},1928:function(e){"use strict";e.exports="precision mediump float;\n\nvoid main() {\n	gl_FragColor = vec4(0.0,0.0,0.0,1.0);\n}"},2204:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\n// uniform vec2 center;\nuniform float radius;\nuniform sampler2D rand;\nuniform sampler2D pebbles;\nuniform float iTime;\n\nconst vec2 zOffset = vec2(37.0,17.0);\nconst vec2 wOffset = vec2(59.0,83.0);\n\nvec4 texNoise(vec2 uv)   // Emulate a single texture fetch into the precalculated texture\n{\n    // NOTE: Precalculate texture, so we can do a single fetch instead of 4.\n    // Afaik we can't generate a texture of a specific size in shadertoy at the momemt.\n    float r = texture2D( rand, mod((uv+0.5)/256.0, 1.)).r;\n    float g = texture2D( rand, mod((uv+0.5 + zOffset)/256.0, 1.)).r;\n    float b = texture2D( rand, mod((uv+0.5 + wOffset)/256.0, 1.)).r;\n    float a = texture2D( rand, mod((uv+0.5 + zOffset + wOffset)/256.0, 1.)).r;\n    \n    return vec4(r, g, b, a);\n}\n\n\nfloat noise4dFast( in vec4 x )\n{\n    vec4 p = floor(x);\n    vec4 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    \n    vec2 uv = (p.xy + p.z*zOffset + p.w*wOffset) + f.xy;\n    \n    vec4 s = texNoise(uv);\n    return mix(mix( s.x, s.y, f.z ), mix(s.z, s.w, f.z), f.w);\n}\n\nvoid main() {\n	vec2 uv = 2.*(gl_FragCoord.xy / resolution - vec2(.5));\n	vec4 col = vec4(vec3(0.), 1.);\n\n	vec2 center = vec2(0.);\n	center.x = 1.6 * noise4dFast(vec4(vec3(0.), iTime / 3. + 0.)) - .8;\n	center.y = 1.6 * noise4dFast(vec4(iTime / 3. + 9999., vec3(0.))) - .8;\n\n	if(length(uv-center)<radius){\n		col.xyz = texture2D(pebbles, (uv-center) / radius).rgb;\n	}\n	gl_FragColor = col;\n}"},2967:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_texture;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\n\nfloat decode(vec2 channels) {\n    return (dot(channels, vec2(BASE, BASE * BASE))) / scale;\n}\n\nvec2 extract(sampler2D tex, vec2 texcoord){\n	vec4 valueRAW = texture2D(tex, texcoord);\n	return vec2(decode(valueRAW.rg), decode(valueRAW.ba));\n}\n\nvoid main() {\n	vec2 uv = gl_FragCoord.xy / resolution;\n	vec2 val = extract(u_texture, uv);\n	gl_FragColor = vec4(val.x, val.x, val.x, 1.);\n}"},2565:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_texture;\n\nvoid main() {\n	vec2 uv = gl_FragCoord.xy / resolution;\n	gl_FragColor = texture2D(u_texture, uv);\n}"},3972:function(e){"use strict";e.exports="attribute vec4 position;\n\nvoid main() {\n	gl_Position = position;\n}"},3697:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_texture;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\n\nvec2 encode(float value) {\n    value = floor(value * scale);\n    float x = mod(value, BASE);\n    float y = floor(value / BASE);\n    return vec2(x, y) / BASE;\n}\n\nvec4 pack(vec2 value){\n	return vec4(encode(value.x), encode(value.y));\n}\n\nvoid main() {\n	vec2 uv = gl_FragCoord.xy / resolution;\n	vec4 val = texture2D(u_texture, uv);\n	gl_FragColor = pack(vec2(val.r * val.a));\n}"},2930:function(e){"use strict";e.exports="precision highp float;\nvarying vec3 color;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\n\nuniform float HD;\n\nvec2 encode(float value) {\n    value = floor(value * scale);\n    float x = mod(value, BASE);\n    float y = floor(value / BASE);\n    return vec2(x, y) / BASE;\n}\n\nvec4 pack(vec2 value){\n	return vec4(encode(value.x), encode(value.y));\n}\n\nvoid main () {\n	gl_FragColor = pack(vec2(HD > .5 ? .02 : .02,.13));\n}"},5557:function(e){"use strict";e.exports="precision highp float;\n\nattribute vec2 v_texcoord;\nattribute vec2 position;\n\nuniform sampler2D u_texture;\nvarying vec3 color;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\nconst float OFFSET = 0.0;\n\n// vec3 hsv2rgb(vec3 c) {\n// 	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n// 	vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n// 	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n// }\n\nfloat decode(vec2 channels) {\n    return (dot(channels, vec2(BASE, BASE * BASE))) / scale;\n}\n\nvec2 extract(sampler2D tex){\n	vec4 valueRAW = texture2D(tex, position);\n	return vec2(decode(valueRAW.xy), decode(valueRAW.zw));\n}\n\nvoid main () {\n	vec2 pos = extract(u_texture);\n	// color = hsv2rgb(vec3(0.5 * v_texcoord + 0.4, 0.9)) * .1;\n	gl_Position = vec4(pos * 2.0 - 1.0, 0.0, 1.0);\n	gl_PointSize = .5;\n}"},1307:function(e){"use strict";e.exports="precision highp float;\nuniform int pass;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\n\nvec2 encode(float value) {\n    value = value * scale;\n    float x = mod(value, BASE);\n    float y = floor(value / BASE);\n    return vec2(x, y) / BASE;\n}\n\nvec4 pack(vec2 value){\n	return vec4(encode(value.x), encode(value.y));\n}\n\nvec2 n2rand() {\n	return vec2(\n		fract(sin(dot(gl_FragCoord.xy, vec2(12.9898, 78.233))) * 43758.5453),\n  		fract(sin(dot(gl_FragCoord.xy * 1.61803, vec2(12.9898, 78.233))) * 43758.5453)\n  	);\n}\n\nvoid main() {\n			vec2 pos_rand = n2rand() - .5;\n	if(pass == 0){\n		gl_FragColor = pack(.5 + pos_rand );// + vec4(n2rand(), -1., -1.);\n	}\n	else{\n		gl_FragColor = pack(2.*pos_rand);\n	}\n}"},1489:function(e){"use strict";e.exports="precision mediump float;\nattribute vec2 position;\n\nvoid main() {\n	gl_Position = vec4(position, 0.0, 1.0);\n}"},897:function(e){"use strict";e.exports="precision highp float;\n\nfloat hash1( float n ){\n    return fract(sin(n)*138.5453123);\n}\n\nfloat random (vec2 st) {\n    return step(0.5, hash1(st.x*13.0+hash1(st.y*71.1)));\n}\n\nvoid main() {\n	float random = random(gl_FragCoord.xy/1000.);\n	gl_FragColor = vec4(random, random, random, 1.);\n}"},7635:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_texture;\nuniform float iTime;\n\nconst float PI = 3.1415926535897;\n\nvec3 sphericalToCartesian( float rho, float phi, float theta ) {\n    float sinTheta = sin(theta);\n    return vec3( sinTheta*cos(phi), sinTheta*sin(phi), cos(theta) )*rho;\n}\n\nint state(vec2 uv){\n	if(uv.x > 1.){\n		uv.x -= 1.;\n	}\n	if(uv.x < 0.){\n		uv.x += 1.;\n	}\n	if(uv.y > 1.){\n		uv.y -= 1.;\n	}\n	if(uv.y < 0.){\n		uv.y += 1.;\n	}\n	return texture2D(u_texture, uv).r > .5 ? 1 : 0;\n}\n\nint sphericalState(vec2 uv){\n	vec2 offset = uv * vec2(2.*PI, PI);\n	vec3 sphereMap = sphericalToCartesian(1., offset.x, offset.y);\n	return state(sphereMap.xy);\n}\n\nvoid main() {\n		vec2 UV = gl_FragCoord.xy / resolution;\n\n		int curState = state(UV);\n\n		int sum = 0;\n\n		for(int i = -1; i <= 1; i ++){\n			for(int j = -1; j <= 1; j ++){\n				if( !(i == 0 && j == 0)){\n					vec2 offset = UV + vec2(i, j) /  resolution;\n					sum += state(offset);\n				}\n			}\n		}\n\n		float newState1 = \n			(curState == 0 && sum == 3) || \n			(curState == 1 && (sum == 3 || sum == 2)) ? 1. : 0.;\n		float newState2 = \n			(curState == 0 && sum == 2) || \n			(curState == 1 && (sum <= 4 || sum >= 2)) ? 1. : 0.;\n\n		float newState = iTime > 10. && iTime < 10.3 ? newState2 : newState1;\n		\n		gl_FragColor = vec4(vec3(newState1), 1);\n		// gl_FragColor = vec4(curState, curState, curState, 1);\n		// gl_FragColor = vec4(.5, .1, 0, 1);\n\n}"},4310:function(e){"use strict";e.exports="precision highp float;\n\n// Uses code by IQ and anatole duprat - XT95/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Approximating Translucency for a Fast, Cheap and Convincing Subsurface Scattering Look :\n// http://colinbarrebrisebois.com/2011/03/07/gdc-2011-approximating-translucency-for-a-fast-cheap-and-convincing-subsurface-scattering-look/\n\nstruct Ray{\n  vec3 p;\n  int obj;\n  float d;\n};\n\nuniform float iTime;\nuniform sampler2D iChannel0;\nuniform sampler2D randSampler;\nuniform vec3 iAudio;\nuniform vec2 iResolution;\n\nuniform float tunnelPos;\nuniform float fisheye;\nuniform vec2 creatureXY;\nuniform float tunnelLight;\nuniform float tunnelBase;\nuniform float creatureLight;\nuniform float wingRot;\nuniform float creatureFlip;\nuniform float creatureTwist;\nuniform int HD;\nuniform float fairyLight;\nuniform float tunnelWonky;\nuniform float tunnelWidth;\nuniform float checker;\nuniform float fairyTime;\nuniform vec2 rayUp;\n\nconst float PI = 3.14159265359;\nconst vec3 ax = vec3(1., 0., 0.);\n\nRay raymarche( in vec3 ro, in vec3 rd, in vec2 nfplane );\nvec3 normal( in vec3 p );\nRay map( in vec3 p );\nmat3 lookat( in vec3 fw, in vec3 up );\nvec3 rotate( in vec3 v, in float angle, in vec3 pos);\nfloat thickness( in vec3 p, in vec3 n, float maxDist, float falloff );\nfloat ambientOcclusion( in vec3 p, in vec3 n, float maxDist, float falloff );\nfloat smin( float a, float b, float k );\n\n\nvec3 lpos1,lpos2,lpos3;\nvec3 lpos4,lpos5,lpos6;\nvec3 pCreature, pCreatureOffset;\nvec4 rCreature;\nvec3 posOff;\nvec3 sssColor, diffColor1, diffColor2, diffColor3;\n\n// vec2 tunnelOffset, tunnelWave;\n// vec4 rCreatureI;\nvec3 pTunnel;\n\nvec3 fairy[9];\nconst int numFairy = 9;\n\nfloat aoMaxSteps = 3.0;\n\n\nvec4 quat_from_axis_angle(vec3 axis, float angle)\n{ \n  vec4 qr;\n  float half_angle = (angle * 0.5);\n  qr.x = axis.x * sin(half_angle);\n  qr.y = axis.y * sin(half_angle);\n  qr.z = axis.z * sin(half_angle);\n  qr.w = cos(half_angle);\n  return qr;\n}\n\nvec4 quat_conj(vec4 q)\n{ \n  return vec4(-q.x, -q.y, -q.z, q.w); \n}\n  \nvec4 quat_mult(vec4 q1, vec4 q2)\n{ \n  vec4 qr;\n  qr.x = (q1.w * q2.x) + (q1.x * q2.w) + (q1.y * q2.z) - (q1.z * q2.y);\n  qr.y = (q1.w * q2.y) - (q1.x * q2.z) + (q1.y * q2.w) + (q1.z * q2.x);\n  qr.z = (q1.w * q2.z) + (q1.x * q2.y) - (q1.y * q2.x) + (q1.z * q2.w);\n  qr.w = (q1.w * q2.w) - (q1.x * q2.x) - (q1.y * q2.y) - (q1.z * q2.z);\n  return qr;\n}\n\nvec3 rotate_vertex_position(vec3 position, vec4 qr)\n{ \n  // vec4 qr = quat_from_axis_angle(axis, angle);\n  vec4 qr_conj = quat_conj(qr);\n  vec4 q_pos = vec4(position.x, position.y, position.z, 0);\n  \n  vec4 q_tmp = quat_mult(qr, q_pos);\n  qr = quat_mult(q_tmp, qr_conj);\n  \n  return vec3(qr.x, qr.y, qr.z);\n}\n\nvec2 GetGradient(vec2 intPos, float t) {\n    \n    // Texture-based rand (a bit faster on my GPU)\n    float rand = texture2D(randSampler, intPos / 64.0).r;\n    \n    // Rotate gradient: random starting rotation, random rotation rate\n    float angle = 600.283185 * rand + 4.0 * t * rand;\n    return vec2(cos(angle), sin(angle));\n}\n\n\nfloat Pseudo3dNoise(vec3 pos) {\n    vec2 i = floor(pos.xy);\n    vec2 f = pos.xy - i;\n    vec2 blend = f * f * (3.0 - 2.0 * f);\n    float noiseVal = \n        mix(\n            mix(\n                dot(GetGradient(i + vec2(0., 0.), pos.z), f - vec2(0., 0.)),\n                dot(GetGradient(i + vec2(1., 0.), pos.z), f - vec2(1., 0.)),\n                blend.x),\n            mix(\n                dot(GetGradient(i + vec2(0., 1.), pos.z), f - vec2(0., 1.)),\n                dot(GetGradient(i + vec2(1., 1.), pos.z), f - vec2(1., 1.)),\n                blend.x),\n        blend.y\n    );\n    return noiseVal / 0.7; // normalize to about [-1..1]\n}\n\nvec3 threePsuedo3dNoise(vec3 pos){\n    vec3 threeNoise;\n    threeNoise.x = Pseudo3dNoise(pos + vec3(0.1, 0., 0.));\n    threeNoise.y = Pseudo3dNoise(pos + vec3(0.3111, 10., 999.123));\n    threeNoise.z = Pseudo3dNoise(pos + vec3(0.3578, 110., 999999.45));\n    return threeNoise;\n}\n\n\nvec3 objTrans(vec3 pos, vec3 oPos, vec4 qr){\n    return rotate_vertex_position(pos, qr) + oPos;\n}\n\nvec3 objTransI(vec3 pos, vec3 oPos, vec4 qr){\n    return rotate_vertex_position(pos - oPos, quat_conj(qr));\n}\n\nvec3 creature(vec3 pos){\n    return objTransI(pos + pCreatureOffset, pCreature, rCreature) - pCreatureOffset;\n}\n\nvec3 creatureI(vec3 pos){\n    return objTrans(pos - pCreatureOffset, pCreature, rCreature) + pCreatureOffset;\n}\n\nfloat hash(float c){return fract(sin(dot(c,12.9898))*43758.5453);}\n\nvec3 polarCoord(float r, float phi, float theta )\n{\n    // Theta starts at groundPlane\n 	return vec3(\n        r * sin(PI/2. - theta) * cos(phi),\n        r * cos(PI/2. - theta),\n       	r * sin(PI/2. - theta) * sin(phi)  \n    );\n}\n\nvec3 polarCoordDeg(float r, float phi, float theta )\n{\n 	return polarCoord(r, phi * PI / 180., theta  * PI / 180. );\n}\n\nvec3 rectCoord(vec3 pos){\n 	float r = length(pos);\n    float theta = atan(pos.y, pos.x);\n    float phi = atan(length(pos.xy), pos.z);\n    return vec3(r, phi, theta);\n}\n\n// Picking colors with HSV is much simpler\nvec3 hsv(float cX, float cY, float cZ)\n{\n    cX -= float(int(cX));\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(cX) + K.xyz) * 6.0 - K.www);\n    return cZ * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), cY);\n}\n\n// Linear white point\nconst float W = 1.2;\nconst float T2 = 7.5;\n\n//Gamma correction\nvec3 gamma(vec3 x, float gamma) {\n    return pow(x, vec3(1./gamma));\n}\n\nfloat fadeIn(float t){\n 	return min(iTime/t,1.); \n}\n    \n\nRay raymarche( in vec3 ro, in vec3 rd, in vec2 nfplane ){\n    const int maxSteps = 80;\n    float epsilon = 0.001;\n	Ray ray = Ray(\n        ro+rd*nfplane.x, \n        -1,\n        -1.0\n    );\n	float t = 0.;\n	for(int i=0; i<maxSteps; i++)\n	{\n        ray = map(ray.p);\n        t += ray.d;\n        ray.p += rd * ray.d;\n        if( \n            ray.d < epsilon || \n            t > (nfplane.y - (1. - float(HD)) * 200.) ||\n            (i > maxSteps / 4 && HD==0)\n        )\n            break;   \n	}\n	\n	return ray;\n}\n\nvec3 normal( in vec3 p ){\n	vec3 eps = vec3(0.001, 0.0, 0.0);\n	return normalize( vec3(\n		map(p+eps.xyy).d-map(p-eps.xyy).d,\n		map(p+eps.yxy).d-map(p-eps.yxy).d,\n		map(p+eps.yyx).d-map(p-eps.yyx).d\n	) );\n}\n\n\nmat3 lookat( in vec3 fw, in vec3 up ){\n	fw = normalize(fw);\n	vec3 rt = normalize( cross(fw, normalize(up)) );\n	return mat3( rt, cross(rt, fw), fw );\n}\n\n\nvec3 rotate( in vec3 v, in float angle, in vec3 pos){\n	vec4 qr = quat_from_axis_angle(v, angle);\n    return rotate_vertex_position(pos, qr);\n}\n\n\nfloat skinLookup(vec2 pos)\n{\n    float phase = .4*texture2D(iChannel0, mod(pos / 4., 1.0)).r;\n    vec2 offset = vec2(sin(phase + iTime/20.), cos(phase + iTime/23.));\n    return texture2D(iChannel0, mod(pos + offset, 1.0)).r ;\n}\n\nfloat smin( float a, float b, float k ) //Thx to iq^rgba\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat smax( float d1, float d2, float k )\n{\n	float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n	return mix( d2, -d1, h ) + k*h*(1.0-h);\n}\n\n\nvec3 randomSphereDir(vec2 rnd)\n{\n	float s = rnd.x*PI*2.;\n	float t = rnd.y*2.-1.;\n	return vec3(sin(s), cos(s), t) / sqrt(1.0 + t * t);\n}\n\nvec3 randomHemisphereDir(vec3 dir, float i)\n{\n	vec3 v = randomSphereDir( vec2(hash(i+1.), hash(i+2.)) );\n	return v * sign(dot(v, dir));\n}\n\n\nfloat sdRoundCone( in vec3 p, in float r1, float r2, float h )\n{\n    vec2 q = vec2( length(p.xz), p.y );\n    \n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(q,vec2(-b,a));\n    \n    if( k < 0.0 ) return length(q) - r1;\n    if( k > a*h ) return length(q-vec2(0.0,h)) - r2;\n        \n    return dot(q, vec2(a,b) ) - r1;\n}\n\nfloat sdCappedTorus(in vec3 p, in vec2 sc, in float ra, in float rb, in float h)\n{\n    p.z /= h;\n    p.x = abs(p.x);\n    float k = (sc.y*p.x>sc.x*p.y) ? dot(p.xy,sc) : length(p.xy);\n    return (sqrt( dot(p,p) + ra*ra - 2.0*ra*k ) - rb) * min(h, 1.);\n}\n\nfloat sdCappedCylinder( vec3 p, float r, float h )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\n\nfloat ambientOcclusion( in vec3 p, in vec3 n, float maxDist, float falloff )\n{\n	const int nbIte = 8;\n    const float nbIteInv = 1./float(nbIte);\n    const float rad = 1.-1.*nbIteInv; //Hemispherical factor (self occlusion correction)\n    \n	float ao = 0.0;\n    for( int i=0; i<nbIte; i++ )\n    {\n        if(HD == 0 && i > nbIte / 8) break;\n        float l = hash(float(i))*maxDist;\n        vec3 rd = normalize(n+randomHemisphereDir(n, l )*rad)*l; // mix direction with the normal\n            												        // for self occlusion problems\n        ao += (l - map( p + rd ).d) / pow(1.+l, falloff);\n    }\n    return clamp( 1.-ao*nbIteInv, 0., 1.);\n}\n\n\nfloat thickness( in vec3 p, in vec3 n, float maxDist, float falloff )\n{\n    // Num near samples\n	const int nbIte = 8;\n    const float nbIteInv = 1./float(nbIte);    \n	float ao = 0.0;\n    for( int i=0; i<nbIte; i++ )\n    {\n        if(HD == 0 && i > nbIte / 8) break;\n            float l = hash(float(i))*maxDist;\n            // Normal is reversed from ao calculation\n            vec3 rd = normalize(-n)*l;\n            ao += (l + map( p + rd ).d) / pow(1.+l, falloff);\n        \n    }\n    return clamp( 1.-ao*nbIteInv, 0., 1.);\n}\n\nvec4 calcTunnelOffset(vec3 tunnelP){\n    vec2 tO = 6.*vec2(sin(tunnelP.x/12.), cos(tunnelP.x/12.));\n    vec2 tW = 8.*vec2(sin(tunnelP.x/32.), cos(tunnelP.x/22.));\n    return vec4(tO, tunnelWonky * tW);\n}\n\n//Map\nRay map( in vec3 p )\n{\n    float fairyDist = 999.;\n    float fairySize = .08;\n    // if(HD == 1){\n    for(int i = 0; i < numFairy; i++){\n        if(HD == 1 || mod(float(i), 2.) == 0.){\n        float fd = length(p - fairy[i]) - fairySize;\n        fairyDist = min(fairyDist, fd);\n        }\n    }\n    // }\n\n    vec3 pCreatROT = creature(p);;\n\n    vec3 bBallCenter = creature(lpos1) - posOff;\n    vec3 lBallCenter = creature(lpos1);\n    float wingRotMod = mod(-wingRot, 1.);\n    float suckIn = abs(3. * max(.333, wingRotMod) - 2.);\n    vec3 tBallCenter = bBallCenter + vec3(0., 5., 4.) * suckIn;\n    vec3 cBallCenter = bBallCenter + vec3(4. + sin(iTime), -3., 2.);\n\n    // Render light balls\n    float lightBallRad = .25;\n    //p.xz = mod(p.xz+100., 200.)-100.;\n    float d = 100.;//+textureLod(iChannel0, p.xz*.05, 0.0).r*1.5;\n    d = min(d, length(pCreatROT-creature(lpos1))-lightBallRad);\n    \n    float lightBallRadWing = .2;\n    d = min(d, length(pCreatROT-creature(lpos4))-lightBallRadWing);\n    d = min(d, length(pCreatROT-creature(lpos5))-lightBallRadWing);\n    d = min(d, length(pCreatROT-creature(lpos6))-lightBallRadWing);\n\n    // Render skin ball\n    \n    \n    \n    float bBallRad = 6.;\n    float lBallRad = lightBallRad + .5;\n    float tBallRad = 3.;\n    //p.xz = mod(p.xz, 60.)-30.;\n    //p = rotate(vec3(0.,1.,0.), p.y*.05*cos(iTime+sin(iTime*1.5+id.x*5.)+id.y*42.))*p;\n    float bD = length(pCreatROT-bBallCenter) - bBallRad;\n    float lD = length(pCreatROT-lBallCenter) - lBallRad;\n    float tD = length(pCreatROT-tBallCenter) - tBallRad;\n    float tD2 = length(pCreatROT-cBallCenter) - tBallRad/1.5  * (pow(iAudio[1], .5) + .5);\n    float texDisp = .35 * skinLookup(\n        (pCreatROT-bBallCenter).yz / 15.\n    );\n    d = min(d, smin(smin(smax(tD2, bD, 0.6), lD, 1.), tD, 2.) - texDisp );\n\n    //return d;\n    \n    vec3 pBranch = rotate(ax, 2.*PI/8., pCreatROT - bBallCenter);\n    float branch = sdRoundCone(pBranch, .7, .3, 10.);\n    \n    pBranch = rotate(ax, 3.*PI/8., pCreatROT - bBallCenter);\n    branch = smin(branch, sdRoundCone(pBranch, .7, .3, 10.), 2.);\n    \n    pBranch = rotate(ax, 4.*PI/8., pCreatROT - bBallCenter);\n    branch = smin(branch, sdRoundCone(pBranch, .7, .3, 10.), 2.);\n    \n    pBranch = rotate(ax, 5.*PI/8., pCreatROT - bBallCenter);\n    branch = smin(branch, sdRoundCone(pBranch, .7, .3, 10.), 2.);\n    \n    vec3 pWing = rotate(ax, 1.38 - 2.*PI * wingRot,  \n        pCreatROT - bBallCenter + vec3(0., 0., .5));\n    float wing = sdCappedTorus(\n        pWing.zyx, \n        vec2(sin(.7),cos(.7)), \n        11., 1.5, .33\n    );\n    branch = smin(branch, wing, 1.);\n\n    d = smin(d, branch - texDisp * .5, 2.);\n\n    vec3 tunnelP = p - pTunnel;\n\n    vec4 tunnelOffset = calcTunnelOffset(tunnelP);\n    float tDist = length(tunnelP.yz + tunnelOffset.xy + tunnelOffset.zw);\n    float cylinder = max(\n        tunnelWidth - tDist, \n    0.);\n    cylinder *= min(1., 1./max(0.001, (abs(tunnelWonky)+.5)));\n    // // if(max(abs(tunnelOffset.x + tunnelOffset.z), abs(tunnelOffset.y + tunnelOffset.w)) > 1.){\n    //     cylinder *= .5;\n    // // }\n    int obj = 0;\n\n    // if(HD == 1){\n    if(fairyDist < d && fairyDist < cylinder){\n        d = smin(d, fairyDist, .5);\n        obj = 2;\n    }\n    // }\n\n    else if(cylinder < d){\n        obj = 1;\n        d = cylinder;\n    }\n    \n    return  Ray(p, obj, d);\n}\n\nvec3 gradLight(vec3 pos){\n    // pos = creature(pos - pCreatureOffset) + pCreatureOffset - pCreature;\n    pos = rotate_vertex_position(pos - pCreature - pCreatureOffset, quat_conj(rCreature)) + pCreatureOffset;\n    float angle = (atan(pos.y, pos.z) + PI) / (2. * PI);\n    return hsv(angle * 3. + .2*sin(iTime * 1.5), .8, .4);\n}\n\n//Shading\nvec3 shade( in Ray ray, in vec3 n, in vec3 ro, in vec3 rd )\n{		\n    vec3 p = vec3(ray.p);\n\n    // vec3 diffColor4 = ;\n\n    vec3 dC4 = gradLight(lpos4);\n    vec3 dC5 = gradLight(lpos5);\n    vec3 dC6 = gradLight(lpos6);\n    \n    float nLookup = skinLookup(rectCoord(n).yz / 25.);\n    float nLookup2 = nLookup * nLookup - .5;\n    vec3 skinColor = hsv(0.03, 0.3, nLookup-.2) + hsv(0.03 + nLookup2*.8, 0.7 - nLookup2, nLookup);\n    skinColor /= 1.5;\n    skinColor = abs(skinColor * skinColor);\n    float roughness = 0.05;\n    float shininess = .05;\n    \n    \n    // Light positions wrt raymarch point\n    float lL1 = length(lpos1-p);\n    float lL2 = length(lpos2-p);\n    float lL3 = length(lpos3-p);\n    float lL4 = length(lpos4-p);\n    float lL5 = length(lpos5-p);\n    float lL6 = length(lpos6-p);\n\n	vec3 ldir1 = (lpos1-p) / lL1;	\n	vec3 ldir2 =  (lpos2-p) / lL2;	\n	vec3 ldir3 =  (lpos3-p) / lL3;\n    \n    vec3 ldir4 = (lpos4-p) / lL4;	\n	vec3 ldir5 =  (lpos5-p) / lL5;	\n	vec3 ldir6 =  (lpos6-p) / lL6;\n    \n    float latt1 = .3*pow(lL1 *.15, 3. ) / iAudio.x;\n    float latt2 = pow( lL2*.15, 3. ) / iAudio.y;\n    float latt3 = 3.*pow( lL3*.15, 2.5 ) / iAudio.z;\n\n    float latt4 = .3*pow( lL4*.15, 3. ) / iAudio.x;\n    float latt5 = pow(lL5*.15, 3. ) / iAudio.y;\n    float latt6 = pow( lL6*.15, 3. ) / iAudio.z;\n\n    diffColor1 = hsv(-.001/latt1+.5, .8, .3);\n    \n    // SSS multiplier (thickness) and AO\n    float sssThick = .8;\n	float thick = thickness(p, n, aoMaxSteps, 1./sssThick);\n    \n    float aoFalloff = 1.;\n	// float occ = .1*pow( ambientOcclusion(p, n, aoMaxSteps, aoFalloff), 6.);\n\n    // Diffuse lighting from lights\n	// vec3 diff1 = diffColor1 * (max(dot(n,ldir1),0.) ) / latt1;\n	vec3 diff2 = diffColor2 * (max(dot(n,ldir2),0.) ) / latt2;\n	// vec3 diff3 = diffColor3 * (max(dot(n,ldir3),0.) ) / latt3;\n\n    vec3 col = vec3(0.);//skinColor * diff2;// + diff2;// + diff3;\n    \n\n    vec3 refl = reflect(rd,n);  \n\n    float fairySSS = 0.;\n    if(HD == 1){\n        for(int i = 0; i < numFairy; i++){\n            vec3 fpos = fairy[i];\n            float ftrans = clamp( dot(-rd, -fpos+n), 0., 1.) + 1.;\n            float flatt = pow( length(fpos-p), 4. );\n            fairySSS += ftrans/flatt;\n            }\n    }\n    fairySSS *= fairyLight;\n\n    float trans1 =  clamp( dot(-rd, -ldir1+n), 0., 1.) + 1. ;\n    float trans2 =  clamp( dot(-rd, -ldir2+n), 0., 1.) + 1. ;\n    float trans3 =  clamp( dot(-rd, -ldir3+n), 0., 1.) + 1. ;\n    \n    // SSS from lights inside\n    float trans4 =  clamp( dot(-rd, -ldir4+n), 0., 1.) + 1.;\n    float trans5 =  clamp( dot(-rd, -ldir5+n), 0., 1.) + 1. ;\n    float trans6 =  clamp( dot(-rd, -ldir6+n), 0., 1.) + 1. ;\n\n    vec3 headLights = diffColor3 * creatureLight * trans3/latt3; \n    vec3 bodyLights = creatureLight * gradLight(p) * (\n        dC4*trans4/latt4 + dC5*trans5/latt5 + dC6*trans6/latt6\n    );\n    vec3 topLight = diffColor2 * creatureLight * thick * trans2/latt2;\n    \n\n    if(ray.obj == 0){\n        col = skinColor * diff2;// + diff2;// + diff3;\n        // SSS from lights inside        \n        \n        col += thick * (sssColor * (\n            .01*diffColor1*trans1/latt1 + \n            .2 * topLight) +\n            .1 * headLights + \n            .05 * bodyLights +\n            .001 * fairySSS\n        ) ;\n        col *= (.2 + .8*skinColor);\n        float spec = pow(clamp( dot( refl, ldir2 ), 0.0, 1.0 ),1./roughness);\n        col += shininess*spec + .02*skinColor;\n        // col = gradLight(p);\n    }\n\n    else if(ray.obj == 1){\n        vec3 pTunnelOff = p - pTunnel;\n        vec4 tunnelOffset = calcTunnelOffset(pTunnelOff);\n        pTunnelOff += 1. * vec3(0., tunnelOffset.xy);\n        float spec = pow(clamp( dot( refl, ldir2 ), 0.0, 1.0 ), 1.);\n        spec = 1.;\n        spec =  3. * spec * iAudio[2] * tunnelLight + tunnelBase;\n        int dBool = int(mod(length(pTunnelOff.x/12.) * 2., 2.));\n        float angle = (atan(pTunnelOff.z, pTunnelOff.y)+PI) / (2. * PI);\n        int aFix = 0;\n        int aBool = int(mod(angle * checker - checker / 2. - .5, 2.));\n        float checker = mod(float(dBool + aBool + aFix), 2.0);\n        col = \n            vec3(checker) * (spec) * (\n                pow(min(abs(p.x-50.), 300.)/300., 4.)  + \n                2. * bodyLights + \n                15. * headLights +\n                pow(smoothstep(.0, .5, fairySSS), .6)\n            ) + 10.*pow(smoothstep(.0, 2., fairySSS), 1.) * .3;\n    }\n\n    else if(ray.obj == 2){\n        col = vec3(fairyLight * (iAudio[0] + .5));\n    }\n\n	return col;\n}\n\nvec3 render(vec2 q)\n{\n    // Camera coordinates\n	vec2 v = -1.0 + 2.0*q;\n	v.x *= iResolution.x/iResolution.y;\n\n\n    sssColor = hsv(0.2, 0.6, 1.5);\n    diffColor1 = hsv(0.3, 0.9, .5);\n    diffColor2 = hsv(0.7, 0.1, 0.1);\n    diffColor3 = hsv(0.9, 0.1, 0.5);\n    \n    //Camera Settings\n    // float fisheye = ;\n    float lens = 1.9 - fisheye * length(v);\n    vec2 nfplane = vec2(.001, 400.);\n\n    vec3 lightOffset = vec3(cos(iTime*.5)*6., 0., sin(iTime*.5)*15.);\n\n    vec3 axisCreature = vec3(0., sin(iTime/1.4), cos(iTime/1.4));\n    vec3 axisCreatureFlip = vec3(0., 0., 1.);\n    vec3 axisCreatureTwist = vec3(0., 1., 0.);\n    pCreature =  vec3(-15.-5.*exp(-cos(iTime/1.77)),-1.5+exp(-sin(iTime)), -1.);\n    pCreature += vec3(creatureXY, 0.);\n    // pCreature = vec3(0);\n\n    posOff = vec3(6., 1.5, 1.5);\n    \n    pCreatureOffset = 3. * vec3(exp(-sin(iTime/1.53)),exp(-sin(iTime*1.11)), -cos(iTime*2.11));\n    \n    //Flip\n    rCreature = quat_from_axis_angle(axisCreature, 2.*PI*creatureFlip);\n    // rCreatureI = quat_from_axis_angle(axisCreature, -2.*PI*creatureFlip);\n\n    //Twist\n    rCreature = quat_mult(\n        rCreature,\n        quat_from_axis_angle(axisCreatureTwist, 2.*PI*creatureTwist)\n    );\n    // rCreatureI = quat_from_axis_angle(axisCreatureTwist, -2.*PI*creatureTwist);\n\n    rCreature = quat_mult(\n        rCreature,\n        quat_from_axis_angle(axisCreature, PI/6. * sin(iTime))\n    );\n    // rCreatureI = quat_from_axis_angle(axisCreature, -PI/6. * sin(iTime));\n\n    pTunnel = vec3(tunnelPos, 0., 0.);\n    \n	//define lights pos\n    lpos1 = creatureI(vec3(6., 0., 0.));\n	lpos2 = creatureI(vec3( 15., 3.5, 0.) + lightOffset);\n	lpos3 = creatureI(vec3(2., 4., 2.8));\n    \n    lpos4 = creatureI(vec3(.5, 6.5, -9.5));\n    lpos5 = creatureI(\n        rotate(ax, 2.*PI * wingRot, vec3(.5, .65, -12.2) + posOff) - posOff - vec3(0., 0., .5)\n    );\n    lpos6 = creatureI(vec3(.5, -6., -11.));\n\n    // if(HD == 1){\n    for(int i = 0; i < numFairy; i++){\n        if(HD == 0 && i > numFairy / 2) break;\n        fairy[i] = tunnelWidth * .8 * threePsuedo3dNoise(vec3(float(i)*12345., fairyTime, 0.)) + vec3(-10., 0., 0.);\n    }\n    // }\n   \n	//camera ray\n    float camDist = 25.;\n    float camFreq = 9999999.;\n    vec3 ro = vec3(camDist, 0.0, 0.);\n    vec3 rd = normalize( vec3(v.x, v.y, lens) );\n    vec3 target = vec3(0.0, 0.0, 0.0);\n	rd = lookat( target-ro, vec3(0.,rayUp))*rd;\n    \n	//classic raymarching by distance field\n	Ray ray = raymarche(ro, rd, nfplane );\n	vec3 n = normal(ray.p.xyz);\n	vec3 col = shade(ray, n, ro, rd);\n    return col;\n}\n\nvoid main()\n{\n    vec2 p = gl_FragCoord.xy/iResolution.xy; \n    vec3 col = render(p);\n    \n    col = gamma(col, 2.2); \n\n    // col = texture2D(iChannel0, p).rgb;   \n        \n	gl_FragColor = vec4(col,1.0)*fadeIn(0.9);\n}\n"},1486:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_diffuse;\nuniform sampler2D u_normal;\nuniform vec3 light;\nuniform float TIME;\nuniform float toggleStatus;\n\nconst float A_COL = .45;\nconst float I_COL = .17;\n\nvec3 hsv2rgb(vec3 c) {\n    c.x = mod(c.x, 1.);\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 hsv2rgb(float h, float s, float v) {\n  return hsv2rgb(vec3(h, s, v));\n}\n\nvoid main() {\n	vec2 fragCoord = gl_FragCoord.xy;\n	vec2 uv = fragCoord / resolution;\n\n	vec3 diffuse = texture2D(u_diffuse, uv).rgb;\n	vec3 normal = texture2D(u_normal, uv).rgb;\n	vec3 metal = vec3(diffuse.r);\n	vec3 buttons = toggleStatus > 0. ? \n		hsv2rgb(I_COL, .85, diffuse.g) : hsv2rgb(A_COL, .85, diffuse.g);\n\n	float height = 0.;\n\n	// vec3 buttons = hsv2rgb(.33, .85, 1.) * color.g;\n	float alpha = ceil(diffuse.b);\n	if(abs(uv.x-.5) > .49){\n		alpha = 0.;\n	}\n\n	vec3 c = vec3(0.);\n	if(alpha > 0.){\n		// Phong\n		normal = (normal - vec3(.5))*2.;\n		vec3 lp = vec3(\n			3. * (light.x / resolution.x - .5), \n			// .8 * clamp((1.-light.y / resolution.y - .5), .2, 1.) + 3.*clamp((1.-light.y / resolution.y - .5), -1., .2),\n			3.*(1.-light.y / resolution.y - .5), \n			1.\n		);\n		vec3 sp = vec3(uv - vec2(.5, .5), -1.);\n		vec3 ep = vec3(.5, .5, 0.);\n		c = hsv2rgb(TIME/80. + .5, .85, pow(\n			clamp(\n				dot(\n					normalize(reflect(lp-sp, normal)), \n					normalize(sp)\n				),\n				0., 1.\n			),\n			10.\n		));\n	}\n\n\n	gl_FragColor = vec4(metal + buttons + c, 1.0) * alpha;\n}"},9350:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform vec2 hdAA;\nuniform sampler2D u_diffuse;\nuniform sampler2D u_buttons;\nuniform sampler2D u_playN;\nuniform sampler2D u_pauseN;\nuniform sampler2D u_height;\nuniform sampler2D u_lights;\nuniform vec3 light;\nuniform float TIME;\nuniform bool playing;\nuniform vec3 buttonStatus;\nuniform float toggleStatus;\n\nconst float A_COL = .45;\nconst float I_COL = .55;\nconst float B_COL = .1;\nconst float B_COL_2 = .75;\nconst float L_COL = .7;\n\nvec3 hsv2rgb(vec3 c) {\n    c.x = mod(c.x, 1.);\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 hsv2rgb(float h, float s, float v) {\n  return hsv2rgb(vec3(h, s, v));\n}\n\nfloat sigmoid(float x){\n	return 1.0 / (1.0 + exp(-1.0 * x));\n}\n\nvoid main() {\n	vec2 fragCoord = gl_FragCoord.xy;\n	vec2 uv = fragCoord / resolution;\n\n	vec3 diffuse = texture2D(u_diffuse, uv).rgb;\n	vec3 buttonLights = texture2D(u_buttons, uv).rgb;\n	vec3 heightRGB = texture2D(u_height, uv).rgb;\n	vec3 buttonLights2 = texture2D(u_lights, uv).rgb;\n\n	vec3 normal = vec3(0.);\n	vec3 metal = vec3(0.);\n	vec3 buttons = vec3(0.);\n	vec3 speakers = hsv2rgb(TIME/80., .85, diffuse.b);\n\n	float text = heightRGB.g;\n	float height = 0.;\n\n	if(playing){\n		metal = vec3(diffuse.g);\n		normal = texture2D(u_playN, uv).rgb;\n		height = heightRGB.r;\n		buttons += hsv2rgb(A_COL, .85, buttonLights.b * buttonStatus.b);\n	}\n	else{\n		metal = vec3(diffuse.r);\n		normal = texture2D(u_pauseN, uv).rgb;\n		height = heightRGB.b;\n		buttons += hsv2rgb(A_COL, .85, buttonLights.g * buttonStatus.b);\n	}\n\n	if(uv.x < .5){\n		buttons += hsv2rgb(A_COL, .85, buttonLights.r * buttonStatus.r);\n	}\n	else{\n		buttons += hsv2rgb(A_COL, .85, buttonLights.r * buttonStatus.g);\n	}\n\n	//info button\n	if(uv.y < .5){\n		buttons += hsv2rgb(I_COL, .85, buttonLights2.g);\n	}\n	else{\n		if(uv.x < .5){\n			buttons += hsv2rgb(B_COL_2, .95, buttonLights2.g) * 1.2;\n		}\n		else{\n			buttons += hsv2rgb(B_COL_2, .95, buttonLights2.g) * 1.2;\n		}\n	}\n\n	//AA\n	buttons += clamp(hsv2rgb(L_COL, .0, buttonLights2.r * hdAA.y) * 1.2, 0., 1.);\n	//HD\n	buttons += clamp(hsv2rgb(L_COL, .0, buttonLights2.b * hdAA.x) * 1.2, 0., 1.);\n\n	// vec3 buttons = hsv2rgb(A_COL, .85, 1.) * color.g;\n	float sOffset = toggleStatus*2. + .25;\n	float alpha = clamp(sigmoid(50.*(height + heightRGB.g - sOffset)), 0., 1.);\n\n	if(abs(uv.x-.5) > .49){\n		alpha = 0.;\n	}\n\n	vec3 c = vec3(0.);\n	if(alpha > 0.){\n		// Phong\n		normal = (normal - vec3(.5))*2.;\n		vec3 lp = vec3(\n			3. * (light.x / resolution.x - .5), \n			// .8 * clamp((1.-light.y / resolution.y - .5), .2, 1.) + 3.*clamp((1.-light.y / resolution.y - .5), -1., .2),\n			3.*(1.-light.y / resolution.y - .5) * resolution.y / resolution.x, \n			1.\n		);\n		vec3 sp = vec3(uv - vec2(.5, .5), -1.) * vec3(1., resolution.y / resolution.x, 1.);\n		vec3 ep = vec3(.5, .5, 0.);\n		c = hsv2rgb(TIME/80. + .5, .85, pow(\n			clamp(\n				dot(\n					normalize(reflect(lp-sp, normal)), \n					normalize(sp)\n				),\n				0., 1.\n			),\n			1000.\n		));\n	}\n\n	gl_FragColor = vec4(metal + buttons + c + speakers, 1.0) * alpha;\n}"},2695:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_diffuse;\nuniform sampler2D u_buttons;\nuniform sampler2D u_playN;\nuniform sampler2D u_pauseN;\nuniform sampler2D u_height;\nuniform vec3 light;\nuniform float TIME;\nuniform bool playing;\nuniform vec3 buttonStatus;\nuniform float toggleStatus;\n\nvec3 hsv2rgb(vec3 c) {\n    c.x = mod(c.x, 1.);\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 hsv2rgb(float h, float s, float v) {\n  return hsv2rgb(vec3(h, s, v));\n}\n\nfloat sigmoid(float x){\n	return 1.0 / (1.0 + exp(-1.0 * x));;\n}\n\nvoid main() {\n	vec2 fragCoord = gl_FragCoord.xy;\n	vec2 uv = fragCoord / resolution;\n\n	vec3 diffuse = texture2D(u_diffuse, uv).rgb;\n	vec3 buttonLights = texture2D(u_buttons, uv).rgb;\n	vec3 heightRGB = texture2D(u_height, uv).rgb;\n\n	vec3 normal = vec3(0.);\n	vec3 metal = vec3(0.);\n	vec3 buttons = vec3(0.);\n\n	float text = heightRGB.g;\n	float height = 0.;\n\n	if(playing){\n		metal = vec3(diffuse.g);\n		normal = texture2D(u_playN, uv).rgb;\n		height = heightRGB.r;\n		buttons += hsv2rgb(.33, .85, buttonLights.b * buttonStatus.b);\n	}\n	else{\n		metal = vec3(diffuse.r);\n		normal = texture2D(u_pauseN, uv).rgb;\n		height = heightRGB.b;\n		buttons += hsv2rgb(.33, .85, buttonLights.g * buttonStatus.b);\n	}\n\n	if(uv.x < .5){\n		buttons += hsv2rgb(.33, .85, buttonLights.r * buttonStatus.r);\n	}\n	else{\n		buttons += hsv2rgb(.33, .85, buttonLights.r * buttonStatus.g);\n	}\n\n	// vec3 buttons = hsv2rgb(.33, .85, 1.) * color.g;\n	float sOffset = toggleStatus + .5;\n	float alpha = clamp(sigmoid(50.*(height + heightRGB.g - sOffset)), 0., 1.);\n	// alpha *= ceil(height);\n	// float alpha = clamp(ceil(height + heightRGB.g), 0., 1.) * (1. - toggleStatus);\n	if(abs(uv.x-.5) > .49){\n		alpha = 0.;\n	}\n\n	vec3 c = vec3(0.);\n	if(alpha > 0.){\n		// Phong\n		normal = (normal - vec3(.5))*2.;\n		vec3 lp = vec3(\n			3. * (light.x / resolution.x - .5), \n			// .8 * clamp((1.-light.y / resolution.y - .5), .2, 1.) + 3.*clamp((1.-light.y / resolution.y - .5), -1., .2),\n			3.*(1.-light.y / resolution.y - .5)*.25, \n			1.\n		);\n		vec3 sp = vec3(uv - vec2(.5, .5), -1.)*vec3(1., .25, 1.);\n		vec3 ep = vec3(.5, .5, 0.);\n		c = hsv2rgb(.75, .85, pow(\n			clamp(\n				dot(\n					normalize(reflect(lp-sp, normal)), \n					normalize(sp)\n				),\n				0., 1.\n			),\n			1000.\n		));\n	}\n\n\n	gl_FragColor = vec4(metal + buttons + c, alpha);\n}"},43:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_texture;\nuniform int pass;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\nconst float OFFSET = 0.0;\n\nvec2 encode(float value) {\n    value = floor(value * scale + OFFSET);\n    float x = mod(value, BASE);\n    float y = floor(value / BASE);\n    return vec2(x, y) / BASE;\n}\n\nvec4 pack(vec2 value){\n	return vec4(encode(value.x), encode(value.y));\n}\n\nfloat decode(vec2 channels) {\n    return (dot(channels, vec2(BASE, BASE * BASE)) - OFFSET) / scale;\n}\n\nvec2 extract(sampler2D tex, vec2 texcoord){\n	vec4 valueRAW = texture2D(tex, texcoord);\n	return vec2(decode(valueRAW.rg), decode(valueRAW.ba));\n}\n\nvoid main() {\n	float sum = 0.;\n\n	const int count = 1;\n	int length = 2 * count + 1;\n	float scale = float(length * length);\n	scale = float(length);\n\n	for(int i = -count; i <= count; i++){\n		// for(int j = -count; j <= count; j++){\n			vec2 fragCoord = gl_FragCoord.xy + vec2(i, 0.);\n			if(pass > 0){\n				fragCoord = gl_FragCoord.xy + vec2(0., i);\n			}\n			vec2 uv = fragCoord / resolution;\n			sum += extract(u_texture, uv).x / scale;\n		// }\n	}\n	gl_FragColor = pack(vec2(sum, 0.));\n}"},3350:function(e){"use strict";e.exports="precision highp float;\n\nuniform float time;\nuniform float saturation;\nuniform vec2 resolution;\nuniform sampler2D u_texture;\nuniform sampler2D u_add;\n\nuniform float lightHue;\nuniform float secondLight;\nuniform float hueShift;\nuniform float satMult;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\nconst float OFFSET = 0.0;\n\nconst float PI = 3.1415926535;\n\nvec2 encode(float value) {\n    value = floor(value * scale + OFFSET);\n    float x = mod(value, BASE);\n    float y = floor(value / BASE);\n    return vec2(x, y) / BASE;\n}\n\nvec4 pack(vec2 value){\n	return vec4(encode(value.x), encode(value.y));\n}\n\nfloat decode(vec2 channels) {\n    return (dot(channels, vec2(BASE, BASE * BASE)) - OFFSET) / scale;\n}\n\nvec2 extract(sampler2D tex, vec2 texcoord){\n	vec4 valueRAW = texture2D(tex, texcoord);\n	return vec2(decode(valueRAW.rg), decode(valueRAW.ba));\n}\n\nvec3 hsv2rgb(vec3 c) {\n	c.r = mod(c.r, 1.);\n	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n	vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 thinfilm(float t, float x, float d){\n	return .5*(vec3(\n		cos( 2.*PI * (x) ),\n		cos( 2.*PI * 1.1 * t * (x + .0) ),\n		cos( 2.*PI * 1.2 * t * (x + .0) )\n	) * exp(-d * t) + 1.);\n}\n\n\nvoid main() {\n	vec2 uv = gl_FragCoord.xy / resolution;\n	vec2 l = extract(u_texture, uv);\n	float lh = 1. + sin(lightHue);\n	//vec3 light1 = thinfilm(3.*lh, .5, .3);// 1./saturation);\n	vec3 light1 = l.x * hsv2rgb(vec3(lightHue, saturation * satMult, .85));\n	// vec3 light2 = l.y * thinfilm(1.-l.y, lightHue, 1./saturation);\n	// light2 = vec3(0.);\n	vec3 light2 = l.y * hsv2rgb(vec3(lightHue + .5, saturation * satMult, .85));\n	vec3 rgb = texture2D(u_add, uv).rgb;\n	rgb = rgb2hsv(rgb);\n	rgb = hsv2rgb(rgb + vec3(hueShift, 0., 0.));\n	vec3 val = light1 + secondLight * light2 + rgb;\n	gl_FragColor = vec4(val, 1.);\n	// gl_FragColor = vec4(light1, 1.);\n	// gl_FragColor = vec4(thinfilm(uv.x*4., .8, .2), 1.);\n}"},3778:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_texture;\n\nvoid main() {\n	vec2 uv = gl_FragCoord.xy / resolution;\n	gl_FragColor = texture2D(u_texture, uv);\n}"},6425:function(e){"use strict";e.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform sampler2D u_curFrame;\nuniform sampler2D u_prevFrame;\nuniform float feedback1;\nuniform float feedback2;\nuniform float feedbackScale;\nuniform bool HD;\n\nconst float BASE = 255.0;\nconst float RANGE = BASE * BASE;\nconst float OFFSET = 0.0;\n\nvec2 encode(float value) {\n    value = floor(value * RANGE + OFFSET);\n    float x = mod(value, BASE);\n    float y = floor(value / BASE);\n    return vec2(x, y) / BASE;\n}\n\nvec4 pack(vec2 value){\n	return vec4(encode(value.x), encode(value.y));\n}\n\nfloat decode(vec2 channels) {\n    return (dot(channels, vec2(BASE, BASE * BASE)) - OFFSET) / RANGE;\n}\n\nvec2 extract(sampler2D tex, vec2 texcoord){\n	vec4 valueRAW = texture2D(tex, texcoord);\n	return vec2(decode(valueRAW.rg), decode(valueRAW.ba));\n}\n\nvoid main() {\n	vec2 uv = gl_FragCoord.xy / resolution;\n	vec2 uvScaled = ( uv - vec2(.5) ) * feedbackScale + vec2(.5);\n	// uv -= .5;\n	// uv *= scale;\n	// uv += .5;\n	float prevFrame = extract(u_prevFrame, uvScaled).x;\n	float curFrame = extract(u_curFrame, uv).x;\n\n	// float alpha = curFrame.y;\n\n	// prevFrame.a = 0.0;\n\n	float feedback = 0.985 + feedback1 + feedback2;\n	if(!HD){\n		feedback *= .998;\n	}\n      \n\n	float nextFrame = curFrame + feedback * prevFrame;\n\n	if(nextFrame > 1.0){\n		nextFrame = 1.0;\n	}\n\n	gl_FragColor = pack(vec2(nextFrame, 0.));\n	\n}"},3003:function(e){"use strict";e.exports="precision highp float;\n\n\nuniform vec2 resolution;\nuniform sampler2D u_texture;\nconst int numColors = 4;\nuniform float multiplier;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\nconst float OFFSET = 0.0;\n\n\nvec3 hsv2rgb(vec3 c) {\n	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n	vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 hsv2rgb(float c1, float c2, float c3) {\n	return hsv2rgb(vec3(c1, c2, c3));\n}\n\nfloat decode(vec2 channels) {\n    return (dot(channels, vec2(BASE, BASE * BASE)) - OFFSET) / scale;\n}\n\nvec2 extract(sampler2D tex, vec2 texcoord){\n	vec4 valueRAW = texture2D(tex, texcoord);\n	return vec2(decode(valueRAW.rg), decode(valueRAW.ba));\n}\n\nvoid main () {\n	vec3 colors[numColors];\n	// colors[0] = hsv2rgb(0., 0., 0.);\n	// colors[1] = hsv2rgb(.2, .6, .75);\n	// colors[2] = hsv2rgb(.9, .75, .95);\n	// colors[3] = hsv2rgb(.65, .9, .95);\n\n	// colors[0] = hsv2rgb(0., 0., 0.);\n	// colors[1] = hsv2rgb(.02, .6, .75);\n	// colors[2] = hsv2rgb(.55, .75, .95);\n	// colors[3] = hsv2rgb(.25, .9, .95);\n\n	colors[0] = hsv2rgb(0., 0., 0.);\n	colors[1] = hsv2rgb(.42, .6, .75);\n	colors[2] = hsv2rgb(.95, .75, .95);\n	colors[3] = hsv2rgb(.15, .9, .95);\n\n	float positions[numColors];\n	positions[0] = .001;\n	positions[1] = .15;\n	positions[2] = .4;\n	positions[3] = .999;\n\n	vec2 uv = gl_FragCoord.xy / resolution;\n	float val = extract(u_texture, uv).x;// * multiplier;\n	// val = pow(val, .6);\n\n	vec3 color = vec3(0.);\n\n	bool found = false;\n\n	if(positions[0] > val){\n		color = colors[0];\n	}\n	else if(positions[numColors-1] < val){\n		color = colors[numColors-1];\n	}\n	else{\n		for(int i = 1; i < numColors; i++){\n			if(positions[i] > val && !found){\n				vec3 color1 = colors[i-1];\n				vec3 color2 = colors[i];\n				float range = positions[i] - positions[i-1];\n				float alpha = (val - positions[i-1]) / range;\n				color = alpha * color2 + (1.-alpha)*color1;\n				found = true;\n			}\n		}\n	}\n\n	// color = vec3(val);\n\n	// vec3 color = hsv2rgb(vec3(val, .5, .95));\n\n	gl_FragColor = vec4(color, 1.);\n}"},406:function(e){"use strict";e.exports="precision highp float;\n\nvarying vec2 v_texcoord;\nuniform vec2 resolution;\nuniform sampler2D u_pheromones;\nuniform sampler2D u_position;\nuniform sampler2D u_velocity;\nuniform int pass;\nuniform float time;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\nconst float OFFSET = 0.0;\nconst float PI = 3.1415926535;\n\nfloat atan2(in float y, in float x)\n{\n    float s = (abs(x) > abs(y)) ? 1. : 0.;\n    return mix(PI/2.0 - atan(x,y), atan(y,x), s);\n}\n\nfloat mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 perm(vec4 x){return mod289(((x * 34.0) + 1.0) * x);}\n\nfloat noise(vec3 p){\n    vec3 a = floor(p);\n    vec3 d = p - a;\n    d = d * d * (3.0 - 2.0 * d);\n\n    vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);\n    vec4 k1 = perm(b.xyxy);\n    vec4 k2 = perm(k1.xyxy + b.zzww);\n\n    vec4 c = k2 + a.zzzz;\n    vec4 k3 = perm(c);\n    vec4 k4 = perm(c + 1.0);\n\n    vec4 o1 = fract(k3 * (1.0 / 41.0));\n    vec4 o2 = fract(k4 * (1.0 / 41.0));\n\n    vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);\n    vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);\n\n    return o4.y * d.y + o4.x * (1.0 - d.y);\n}\n\nfloat noise(vec2 uv, float time){\n	return noise(vec3(uv, time));\n}\n\nvec2 encode(float value) {\n    value = floor(value * scale + OFFSET);\n    float x = mod(value, BASE);\n    float y = floor(value / BASE);\n    return vec2(x, y) / BASE;\n}\n\nfloat sinh(float x){\n	return ( exp(x) - exp(-x) ) / 2.;\n}\n\nfloat cosh(float x){\n	return ( exp(x) + exp(-x) ) / 2.;\n}\n\nfloat tanh(float x){\n	return sinh(x) / cosh(x);\n}\n\nfloat sStep(float x, int nSteps, int aI){\n	float a = float(aI);\n	x *= 2.;\n	x = mod(x, 1.);\n	float h = 1. / (.00001 + float(nSteps));\n	float w = h;\n	// return 1. - abs(1. - h * (\n	// 	1./(2.*tanh(a/2.)) * tanh(\n	// 		a * (fract(x/w)-0.5)\n	// 	) + .5 + floor(x/w)\n	// ));\n	return 1. - abs(\n		1. - h * (\n			.5 / tanh(a/2.) * tanh(\n				a * (\n					(x/w - floor(x/w)) - 0.5)\n				) + .5 + floor(x/w)\n			)\n		);\n}\n\nvec4 pack(vec2 value){\n	return vec4(encode(value.x), encode(value.y));\n}\n\nfloat decode(vec2 channels) {\n    return (dot(channels, vec2(BASE, BASE * BASE)) - OFFSET) / scale;\n}\n\nvec2 extract(sampler2D tex, vec2 texcoord){\n	vec4 valueRAW = texture2D(tex, mod(texcoord, 1.));\n	return vec2(decode(valueRAW.rg), decode(valueRAW.ba));\n}\n\nvec2 n2rand(float mult) {\n	return vec2(\n		fract(sin(dot(v_texcoord.xy * mult, vec2(12.9898, 78.233))) * 43758.5453),\n		fract(sin(dot(v_texcoord.xy * 1.61803 * mult, vec2(12.9898, 78.233))) * 43758.5453)\n	);\n}\n\nvec2 n2rand() {\n	return n2rand(1.);\n}\n\nvec2 unitCircle(float angle){\n	return vec2( cos(angle), sin(angle) );\n}\n\nvec2 unitCircleDeg(float angle){\n	return unitCircle(PI*angle/180.0);\n}\n\nvoid main() {\n	float maxVel = 1.8 + .45 * sin(time*3.111) +  + .9 * cos(time*.411);\n	if(pass == 0){\n		vec2 r, d, a, x, v;\n\n		vec2 velOut, posOut;\n\n		x = extract(u_position, v_texcoord);\n		v = extract(u_velocity, v_texcoord);\n\n		velOut = (2. * v - 1.);\n\n		vec2 uv = x;\n\n		float velMult = 1.;\n\n		// sin(time*1.63)*\n		float sensorDist = 33. + 32.*(pow(noise(\n			uv * sStep(.0173*time, 12, 1) * 6., \n			time * .43752\n		), 1.) *2. - 1.);\n\n		// sensorDist = 30.;\n\n		// sensorDist = 30.;\n\n		// float sensorDist2 = 15. + 14.*(pow(noise(vec3(\n		// 	uv * 1.*(1. + cos(time * 3.21334)), \n		// 	time * 15.232)\n		// ), 2.) *2. - 1.);\n\n		// float sensorDist3 = 70. + 69.*(pow(noise(vec3(\n		// 	uv * 15.*(1. + cos(time * 1.21334)), \n		// 	time * 5.232)\n		// ), 2.) *2. - 1.);\n		float multy = sStep(.773*time, 10, 4) * 3. + 1.;\n		// multy = 3.;\n		// multy = pow(noise(uv * 1., time * .122), 2.) * 3. + 1.;\n		float sensorDist2 = sensorDist / multy;\n		float sensorDist3 = sensorDist * multy;\n\n		// float degTurn = 1.// + 8.2*(sin(time*1.512)+1.)/2.567;\n		// + 5.*(pow(noise(\n		// 	uv*(2. + 3.5*sin(time*1.885)), \n		// 	time*0.7112\n		// ) * 2. - 1., 33.));\n\n		float degTurn = 20.*(2. + sin(time*.1347))*sStep(\n			noise(\n				uv*(sStep(time*.07742, 10, 4)*3.), \n				.2144*time\n			),\n		10, 6);\n\n		float randAngle = 90.*sStep(\n			noise(\n				uv*(1. + sStep(time*.06342, 10, 2)*4.),\n				.5131*time\n			),\n		16, 6);\n		// randAngle = degTurn;\n\n		// + 8.2*(sin(time*5.12)+1.)/2.56;\n		degTurn = radians(degTurn);\n		randAngle = radians(randAngle);\n\n		float degRange = degTurn * sStep(.0143*time, 4, 4);\n\n		// float degRange = 180.*sStep(300.*time, 8, 100);\n		// degRange = radians(degRange);\n\n		float curSensor = extract(u_pheromones, uv).r * 4. * (1.5+sin(time / 3.12));\n\n		float degMulty= 1.5 * 2.-curSensor;\n		float velMulty = 1.2 * curSensor;\n		degRange *= curSensor;\n		randAngle *= curSensor * sin(time / 1.12);\n		degTurn *= 1.1 + sin(curSensor / 3.3);\n		sensorDist *= pow(curSensor, 1.+sin(time*2.114));\n		sensorDist2 *= curSensor;\n		sensorDist3 *= curSensor;\n\n		float velAngle = atan2(velOut.y, velOut.x);\n\n		vec2 sensorDistScaled = sensorDist / resolution;\n		vec2 sensorDistScaled2 = sensorDist2 / resolution;\n		vec2 sensorDistScaled3 = sensorDist3 / resolution;\n\n\n		vec2 fSensorOffset = sensorDistScaled * unitCircle(velAngle);\n		vec2 lSensorOffset = sensorDistScaled * unitCircle(velAngle + degRange);\n		vec2 rSensorOffset = sensorDistScaled * unitCircle(velAngle - degRange);\n\n		float fSensor = extract(u_pheromones, uv + fSensorOffset).r;\n		float lSensor = extract(u_pheromones, uv + lSensorOffset).r;\n		float rSensor = extract(u_pheromones, uv + rSensorOffset).r;\n\n\n		// vec2 fSensorOffset2 = sensorDistScaled2 * unitCircle(velAngle);\n		// vec2 lSensorOffset2 = sensorDistScaled2 * unitCircle(velAngle + degRange/degMulty);\n		// vec2 rSensorOffset2 = sensorDistScaled2 * unitCircle(velAngle - degRange/degMulty);\n\n		// float fSensor2 = extract(u_pheromones, uv + fSensorOffset2).r;\n		// float lSensor2 = extract(u_pheromones, uv + lSensorOffset2).r;\n		// float rSensor2 = extract(u_pheromones, uv + rSensorOffset2).r;\n\n\n		// vec2 fSensorOffset3 = sensorDistScaled3 * unitCircle(velAngle);\n		// vec2 lSensorOffset3 = sensorDistScaled3 * unitCircle(velAngle + degRange*degMulty);\n		// vec2 rSensorOffset3 = sensorDistScaled3 * unitCircle(velAngle - degRange*degMulty);\n\n		// float fSensor3 = extract(u_pheromones, uv + fSensorOffset3).r;\n		// float lSensor3 = extract(u_pheromones, uv + lSensorOffset3).r;\n		// float rSensor3 = extract(u_pheromones, uv + rSensorOffset3).r;\n\n\n		// // fSensor3 = 0.;\n		// // lSensor3 = 0.;\n		// // rSensor3 = 0.;\n\n		// fSensor = max(max(fSensor, fSensor2), fSensor3);\n		// lSensor = max(max(lSensor, lSensor2), lSensor3);\n		// rSensor = max(max(rSensor, rSensor2), rSensor3);\n\n		float lrDiff = abs(lSensor - rSensor);\n		lrDiff *= 3.;\n		lrDiff = 1. / (lrDiff + 2.1);\n\n\n		if(fSensor >= lSensor && fSensor >= rSensor){\n			velOut = unitCircle(velAngle) * lrDiff;\n		}\n		if(lSensor >= fSensor && lSensor >= rSensor){\n			// if(lSensor == lSensor2){\n			// 	degTurn /= degMulty;\n			// 	velMult *= velMulty;\n			// }\n			// else if(lSensor == lSensor3){\n			// 	degTurn *= degMulty;\n			// 	velMult /= velMulty;\n			// }\n			velOut = unitCircle(velAngle + degTurn) * lrDiff;\n		}\n		else if(rSensor >= lSensor && rSensor >= fSensor){\n			// if(rSensor == rSensor2){\n			// 	degTurn /= degMulty;\n			// 	velMult *= velMulty;\n			// }\n			// else if(rSensor == rSensor3){\n			// 	degTurn *= degMulty;\n			// 	velMult /= velMulty;\n			// }\n			velOut = unitCircle(velAngle - degTurn) * lrDiff;\n		}\n		else{\n		//   float randVal = n2rand();\n			float rNum = sin(5000000.*time*n2rand(time*10.).r);\n			rNum = n2rand(time*10.).r - .5;\n\n				// float curVal = texture2D(u_pheromones, uv).r;\n			 //  velOut = unitCircle(velAngle + fSensor * degTurn * sin(time));\n			 if(rNum > 0.){\n			 	velOut = unitCircle(velAngle - randAngle) * .9;\n			 }\n			 else{\n			 	velOut = unitCircle(velAngle + randAngle) * .9;\n			 }\n\n			 // velOut = vec2(0.);\n\n			 // velOut = unitCircle(velAngle + 8. * sin(time*2.997));\n		  // velOut = rNum;\n		}\n\n		// velOut -= vec2(.75, 0.);\n\n		// posOut += velOut;\n		velOut *= noise(vec3(uv * 3.* (1.1 + sin(time*.11325)), time*1.113)) * .5 + .5;\n		velOut *= velMult;// * 2.;\n		v = (velOut + vec2(1.)) / 2.;\n\n		\n\n		gl_FragColor = pack(v);\n	}\n	if(pass == 1){\n		vec2 x = extract(u_position, v_texcoord);\n		vec2 v = extract(u_velocity, v_texcoord);\n\n		float lenX = pow(smoothstep(0., .5, length(x-.5)), 4.) * .8;\n\n		v = 2. * v - vec2(1.);\n		// v = -.3 * (1. - lenX) * x ;//+ lenX * v;\n		// v = -lenX * (x - .5) * .3 + (1.-lenX)*v;\n		x += v * maxVel / resolution;\n\n\n		// if(length(x -.5 + .1*unitCircle(n2rand().r * 22.*PI)) > .42){\n		// 	x = vec2(0.5) + .25 * unitCircle(n2rand().x*200.) + .1 * unitCircle((n2rand().y*500.));\n		// }\n\n		x = mod(x, 1.);\n\n		gl_FragColor = pack(x);\n		// gl_FragColor = pack(x);\n		// gl_FragColor = texture2D(u_position, v_texcoord);\n	}\n}"},9715:function(e){"use strict";e.exports="precision mediump float;\n\nattribute vec2 position;\nvarying vec2 v_texcoord;\n\nvoid main() {\n	v_texcoord = 0.5 * position + 0.5;\n	// v_texcoord = position;\n	gl_Position = vec4(position, 0.0, 1.0);\n}"},4422:function(e){"use strict";e.exports="\nprecision highp float;\n\n\nuniform vec2 resolution;\nuniform sampler2D u_texture;\n\nuniform float intensity;\n\nuniform vec2 lightXY;\nuniform float specularHardness;\nuniform float specularPower;\nuniform float diffusePower;\nuniform vec3 viewDir;\n\nconst float BASE = 255.0;\nconst float scale = BASE * BASE;\nconst float OFFSET = 0.0;\n\nvec2 encode(float value) {\n    value = floor(value * scale + OFFSET);\n    float x = mod(value, BASE);\n    float y = floor(value / BASE);\n    return vec2(x, y) / BASE;\n}\n\nvec4 pack(vec2 value){\n	return vec4(encode(value.x), encode(value.y));\n}\n\nfloat decode(vec2 channels) {\n    return (dot(channels, vec2(BASE, BASE * BASE)) - OFFSET) / scale;\n}\n\nvec2 extract(sampler2D tex, vec2 texcoord){\n	vec4 valueRAW = texture2D(tex, texcoord);\n	return vec2(decode(valueRAW.rg), decode(valueRAW.ba));\n}\n\n\nfloat luminance(vec3 c)\n{\n	return dot(c, vec3(.2126, .7152, .0722));\n}\n\nvec2 pixelOffset(vec2 offset){\n	vec2 uv = gl_FragCoord.xy / resolution;\n	return extract(u_texture, uv + offset);\n}\n\nvec3 calcNormal()\n{\n	vec2 yOffset = vec2(0., 1. / resolution.s);\n	vec2 xOffset = vec2(1. / resolution.t, 0.);\n	float R = abs(pixelOffset(xOffset).x );\n	float L = abs(pixelOffset(-xOffset).x );\n	float U = abs(pixelOffset(yOffset).x );\n	float D = abs(pixelOffset(-yOffset).x );\n				 \n	float X = (L-R) * .5;\n	float Y = (U-D) * .5;\n\n	return normalize(vec3(X, Y, 1. / intensity));\n}\n\nvoid main()\n{\n	vec3 n = calcNormal();\n\n	vec2 uv = gl_FragCoord.xy / resolution;\n\n	vec3 lp1 = vec3(lightXY, 2.) + vec3(.5, .5, 0.);\n	vec3 lp2 = vec3(-lightXY, 2.) + vec3(.5, .5, 0.);\n\n	vec3 sp = vec3(uv, -1.);\n	\n	vec3 c1 = diffusePower*vec3(dot(n, normalize(lp1 - sp)));\n	vec3 c2 = diffusePower*vec3(dot(n, normalize(lp2 - sp)));\n	\n    vec3 ep = vec3(.5, .5, 0.);\n	c1 += specularPower*pow(clamp(dot(normalize(reflect(lp1 - sp, n)), \n					   normalize(sp - ep)), 0., 1.), specularHardness);\n	c2 += specularPower*pow(clamp(dot(normalize(reflect(lp2 - sp, n)), \n					   normalize(sp - ep)), 0., 1.), specularHardness);\n\n	float mult = sqrt(extract(u_texture, uv).r);\n	gl_FragColor = pack(vec2(c1.r*mult, c2.r*mult));\n	// gl_FragColor = vec4(c, 1.);\n}\n"},7562:function(e){"use strict";e.exports="\nprecision mediump float;\n\nuniform float TIME;\nuniform float swirl;\nuniform float border;\nuniform int depth;\nuniform vec2 resolution;\n\nvec2 rotateLoc(vec2 loc, float angle){\n	float oAngle = atan(loc.y, loc.x);\n	float nAngle = oAngle + angle / 180.0 * 3.1415926535;\n	vec2 rotated = length(loc) * vec2(cos(nAngle), sin(nAngle));\n	return rotated;	\n}\n\nfloat negOnePow(int power){\n	if(int(mod(float(power), 2.)) == 0){\n		return 1.;\n	}\n	return -1.;\n}\n\nint getColVal(vec2 loc, int level, float rotate){\n	float levelVal = .5*pow(.25, float(level));\n	float radVal = pow(.5, float(level));\n	\n	vec2 newLoc = rotateLoc(loc, rotate);\n	vec2 modLocW = newLoc + vec2(0., levelVal);\n    vec2 modLocB = newLoc - vec2(0., levelVal);\n    // top circle\n    if(length(modLocB) < levelVal){\n    	if(level == depth){\n    		if(length(modLocB) < levelVal/3.){\n    			return 2;\n    		}\n    	}\n    	return 1;\n    }\n    // bottom circle\n    else if(length(modLocW) < levelVal){\n    if(level == depth){\n    		if(length(modLocW) < levelVal/3.){\n    			return 1;\n    		}\n    	}\n    	return 2;\n    }\n    // left half\n    else if(length(loc) < radVal && newLoc.x > 0.){\n    	return 3;\n    }\n    // right half\n    else if(length(loc) < radVal){\n    	return 4;\n    }\n}\n\nvec4 getYinYang(vec2 offset){\n    vec2 uv = (gl_FragCoord.xy + offset) / resolution;\n\n    vec4 color = vec4(0.0);\n    \n    vec2 loc = 2.*(uv - vec2(.5));\n    vec2 ogLoc = vec2(loc);\n    loc *= 1. + border;\n    int colVal = 0;\n    \n    // vec2 ogLoc = vec2(loc);\n   \n    \n    colVal = getColVal(loc, 0, TIME);\n    loc = rotateLoc(loc, TIME);\n   \n    \n    float multFac = .125;\n    float sumVal = 0.;\n    for(int i = 0; i < 16; i++){\n        if (i >= depth){break;}\n        if(colVal > 0 && colVal < 3){\n            sumVal /= 2.;\n            if(i > 0){\n                sumVal += multFac*pow(.25, float(i-1));\n            }\n            loc = 0.5*(loc-loc.y/abs(loc.y)*vec2(0.,pow(.5, float(i+1)))  - negOnePow(colVal)*vec2(0.,sumVal));\n            colVal = getColVal(loc, i+1, pow(swirl, float(i+3))*TIME);\n            loc = rotateLoc(loc, pow(swirl, float(i+3))*TIME);\n        }\n    }\n    \n    \n    \n    \n    if(colVal == 1){\n        color = vec4(1.0); //white\n    }\n    else if(colVal == 2){\n        color = vec4(1., 0., 0., 1.); //red\n        color = vec4(0., 0., 0., 1.);\n    }\n    else if(colVal == 3){\n        color = vec4(0., 1., 0., 1.); //green\n        color = vec4(0., 0., 0., 1.);\n    }\n    else if(colVal == 4){\n        color = vec4(0., 0., 1., 1.); //blue\n        color = vec4(1.);\n    }\n    else {\n        color = vec4(0.);\n    }\n\n    if(length(ogLoc) >= 1.){\n        color = vec4(0.);\n    }\n    else if(length(ogLoc) >= 1./(1.+border)){\n        color = vec4(0., 0., 0., 1.);\n        color = vec4(1.);\n    }\n\n    return color;\n}\n\nvoid main()\n{\n    vec4 color = vec4(0.);\n\n    for(int i = 0; i < 2; i++){\n        for(int j = 0; j < 2; j++){\n            vec2 boi = vec2(float(i)-.5, float(j)-.5)/2.;\n            color += getYinYang(boi)/4.;\n        }\n    }\n\n    // color = getYinYang(vec2(0.));\n    \n    gl_FragColor = color;\n}\n"},9250:function(e,n,t){Promise.resolve().then(t.bind(t,1025))},1025:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return v}});var A=t(9268),o=t(6006);t(8431),t(8909);class r extends o.Component{componentDidUpdate(e){e.toggledOn!==this.props.toggledOn&&this.setState({pop:!1})}render(){let{togglePop:e}=this,{pop:n}=this.state;return(0,A.jsx)("div",{children:(0,A.jsxs)("div",{id:"info-pop",className:"popClose"+(n?" popOpen":""),onClick:()=>this.togglePop(),children:[(0,A.jsx)("div",{className:"crt crtClose"+(n?" crtOpen":"")}),(0,A.jsxs)("div",{id:"info-text",children:[(0,A.jsxs)("p",{children:[(0,A.jsx)("strong",{children:"Isomov - In Theory"})," (DECISIONS 016)"]}),(0,A.jsx)("p",{children:(0,A.jsx)("strong",{children:"Audio"})}),(0,A.jsx)("p",{children:"All tracks written, produced, and mixed by Isomov between 2017 and 2019"}),(0,A.jsx)("p",{children:"Mastering by Air Max '97"}),(0,A.jsx)("p",{children:(0,A.jsx)("strong",{children:"WiFi Holoports"})}),(0,A.jsx)("p",{children:"Hologram, WebGL visualizer, and captive portal concepts by Isomov"}),(0,A.jsx)("p",{children:"Built between 2018 and 2021"}),(0,A.jsx)("p",{children:(0,A.jsx)("strong",{children:"Holograms"})}),(0,A.jsx)("p",{children:"The holograms would not have been possible without the guidance and generosity of Dr. Martina Mrongovius"}),(0,A.jsx)("p",{children:"The first batch of holograms were recorded using Dr. Mrongovius' 532nm diode laser at the Holocenter on Governor's Island in NYC"}),(0,A.jsx)("p",{children:"Subsequent holograms were recorded in Isomov's home studio using an identical 532nm diode laser"}),(0,A.jsx)("p",{children:"All lasers were expertly supplied by Phil Bergeron"}),(0,A.jsx)("p",{children:(0,A.jsx)("strong",{children:"Cases"})}),(0,A.jsx)("p",{children:"Cases designed by Thomas Lauria, based on C4Labs Zebra cases"}),(0,A.jsx)("p",{children:"Acrylic cases were cut with the help of Gabe Liberti at Future Space in Brooklyn"}),(0,A.jsx)("p",{children:"CNC cuts made by Alex Hayden"}),(0,A.jsx)("p",{children:(0,A.jsx)("strong",{children:"Visualizers"})}),(0,A.jsx)("p",{children:"WebGL (via TWGL.js) is used to display real-time, uncompressed, and unique visualizers for each song on the EP"}),(0,A.jsx)("p",{children:"Origin, Emergence, and The One - Implementation of black hole raytracing algorithm modified from set111 via Shadertoy, stars are generated using Conway’s Game of Life"}),(0,A.jsx)("p",{children:"HOPiNG MECHANiSMS - Implementation of Colin Barre-Brisebois and Marc Bouchard’s algorithm for subsurface scattering modified from XT95 via Shadertoy, general raytracing setup adapted from iq via Shadertoy"}),(0,A.jsx)("p",{children:"Ensemble - Physarum particle simulation adapted from Sage Jensen, implemented using 8bit WebGL 1.0 texture buffers which pack 16bit XY data for position and velocity into RG and BA respectively for compatibility purposes, feedback implemented with ping-ponging, rendered using 2D phong shading"}),(0,A.jsx)("p",{children:"WaVeLeT - Wavelet transform adapted from pixelbeast via Shadertoy, custom aurora ray tracing algorithm\xa0"}),(0,A.jsx)("p",{children:"Memory L∞ps - Raytracing setup modified from iq via Shadertoy, custom 3D truchet and Poincare disc schemes"}),(0,A.jsx)("p",{children:"Yin-Yang Loader - Algorithm design by Isomov"}),(0,A.jsx)("p",{children:"Media Players - Modelling, offline renders, and phong shading by Isomov"}),(0,A.jsx)("p",{children:(0,A.jsx)("br",{})})]})]})})}constructor(e){super(e),this.resizing=null,this.togglePop=()=>{this.setState({pop:!this.state.pop})},this.state={pop:!1}}}var a=t(9386),i=t(3543);i.bZ;class s extends a.Z{render(){let{wglLoaded:e,toggledOn:n,audioState:t}=this.state,{audioLoaded:o,maxTrack:a,trackNum:i,TRACKLIST:s,clicked:l,type:c,prevAudio:u,nextAudio:h,playAudio:f,pauseAudio:d,toggleHD:p,toggleAA:g}=this.props,m="0"+(i+1).toString()+". "+s[i].name;return(0,A.jsxs)("div",{className:c+"player hidden"+(e&&n?" shown":""),children:[(0,A.jsxs)("div",{className:c+"controls",children:[(0,A.jsxs)("div",{className:c+"buttons",children:[(0,A.jsx)("button",{id:"playPause",onClick:()=>"playing"!=t?f():d(),disabled:!!l&&!o,children:o?"playing"!=t?"PLAY":"PAUSE":"LOADING"}),(0,A.jsx)("button",{id:"prevTrack",onClick:()=>u(t),disabled:0==i,children:"Prev"}),(0,A.jsx)("button",{id:"nextTrack",onClick:()=>h(t),disabled:i>=a,children:"Next"}),"media"==c?(0,A.jsx)("button",{id:"HD",onClick:()=>p()}):"","media"==c?(0,A.jsx)("button",{id:"AA",onClick:()=>g()}):"","media"==c?(0,A.jsx)(r,{toggledOn:n}):""]}),"mini"==c?(0,A.jsxs)("div",{id:"trackName",children:[" ",(0,A.jsx)("span",{children:m})]}):(0,A.jsxs)("svg",{viewBox:"0 0 100 100",id:"circleTrack",children:[(0,A.jsx)("defs",{children:(0,A.jsx)("path",{d:" M 63.67 99.06 A 50 50 0 0 0 99.06 63.67",id:"textcircle"})}),(0,A.jsx)("text",{dy:"-19.9",children:(0,A.jsxs)("textPath",{href:"#textcircle",children:[(0,A.jsx)("animate",{attributeName:"startOffset",from:"125%",to:(-66/19*m.length-75).toFixed(2)+"%",begin:"0s",dur:((m.length+19)/4).toFixed(2)+"s",repeatCount:"indefinite"}),m]})})]})]}),(0,A.jsx)("canvas",{ref:this.CANVAS_REF})]})}constructor(e){let{tex:n,type:t}=e;super(e),this.toggleStatus=0,this.programDefs={programMedia:["default.vs","mediaplayer.fs"]},this.renderLoop=e=>{let{toggledOn:n,audioState:t}=this.state,{gl:A,textures:o,bufferInfo:r}=this,{programMedia:a}=this.programs,{getAudioState:i,trackNum:s,audioLoaded:l,maxTrack:c,getToggleStatus:u}=this.props;if(this.toggleStatus=u(),this.toggleStatus<.5){n||this.setState({toggledOn:!0});let r={TIME:e/50,resolution:this.canvasSize(),light:[this.mousePos.x,this.mousePos.y,1],u_diffuse:o.diffuse,u_buttons:o.buttons,u_playN:o.playN,u_pauseN:o.pauseN,u_height:o.height,u_lights:o.lights,playing:"playing"!=t,hdAA:this.hdAA,buttonStatus:[0==s?0:1,s>=c?0:1,l?1:0],toggleStatus:this.toggleStatus};this.runProgram(a,r,A.canvas)}else n&&this.setState({toggledOn:!1});t!=i()&&this.setState({audioState:i()})},this.calcSinCos=(e,n)=>{let t=12.5+66/19*n.length;return(e*Math.sin(-t)).toFixed(2)+" "+(e*Math.cos(-t)).toFixed(2)},this.textureDefs={diffuse:{src:n[t+" player diffuse.jpg"]},buttons:{src:n[t+" player buttons.jpg"]},height:{src:n[t+" player height.jpg"]},playN:{src:n[t+" player play N.jpg"]},pauseN:{src:n[t+" player pause N.jpg"]},lights:{src:n[t+" player lights.jpg"]}},this.state={audioState:"paused",wglLoaded:!0,toggledOn:!1}}}t(9620),i.bZ;class l extends a.Z{render(){let{toggleStatus:e,wglLoaded:n}=this.state,{audioLoadedOnce:t}=this.props;return(0,A.jsx)("div",{className:"mediaToggle hidden"+(n&&t?" shown":"")+("mini"==e?"":" x"),onClick:()=>this.toggleStatus(e),children:(0,A.jsx)("canvas",{ref:this.CANVAS_REF})})}constructor(e){super(e),this.programDefs={programMedia:["default.vs","mediaToggle.fs"]},this.textureDefs={diffuse:{src:this.props.tex["x.jpg"]},normal:{src:this.props.tex["x N.jpg"]}},this.renderLoop=e=>{let{gl:n,bufferInfo:t,textures:A}=this,{programMedia:o}=this.programs,{toggleStatus:r}=this.state,a={TIME:e/50,resolution:this.canvasSize(),light:[this.mousePos.x,this.mousePos.y,1],u_diffuse:A.diffuse,u_normal:A.normal,toggleStatus:"mini"!=r?1:0};this.runProgram(o,a,n.canvas)},this.toggleStatus=e=>{this.props.toggleStatus(e);let n="mini"==this.state.toggleStatus?"media":"mini";this.setState({toggleStatus:n})},this.state={toggleStatus:"mini",wglLoaded:!0}}}class c extends a.Z{constructor(...e){super(...e),this.programDefs={programYY:["default.vs","yinyang.fs"]},this.renderLoop=e=>{let{gl:n,bufferInfo:t}=this,{programYY:A}=this.programs,o={TIME:e/50,resolution:[n.canvas.width,n.canvas.height],swirl:Math.sqrt(2),depth:this.props.trackNum,border:.01};this.runProgram(A,o,n.canvas)}}}let u=t(5284),h=u.keys().reduce((e,n)=>{let t=n.replace(/^.+\/([^/]+)\.js/,"$1"),A=u(n).default;return e[t]=A,e},{});function f(e){let n=h[e.componentName];return(0,A.jsx)(n,{...e})}t(9647),t(7733),t(9601);class d extends o.Component{componentDidMount(){this.audioFile.addEventListener("loadedmetadata",this.audioLoaded,!1),this.audioFile.addEventListener("ended",this.audioEnded,!1),document.body.onkeyup=e=>{e.preventDefault(),32==e.keyCode?this.playPauseAudio():72==e.keyCode?this.toggleHide():39==e.keyCode?this.nextAudio():37==e.keyCode?this.prevAudio():70==e.keyCode&&this.toggleHD()},addEventListener("dblclick",e=>this.toggleHide()),setTimeout(()=>this.setState({loadVizzy:!0}),100)}componentWillUnmount(){this.audioContext.close()}render(){let{trackNum:e,audioLoaded:n,webglLoaded:t,clicked:o,audioLoadedOnce:r,toggle:a,hide:i,loadVizzy:s}=this.state,{TRACKLIST:u,DEMO_MODE:h,tex:f,shaders:d}=this.props,p=this.audioController("mini"),g=this.audioController("media");return(0,A.jsxs)("div",{className:"container",children:[h||i?"":(0,A.jsxs)("div",{className:"audioControls",children:[(0,A.jsx)(l,{tex:f,shaders:d,toggleStatus:this.toggleStatus,audioLoadedOnce:r,getHDAA:this.getHDAA}),p,g]}),s&&(0,A.jsx)("div",{className:"bg hidden-fast "+(n&&t?"shown":" "),children:this.visualizer(e)}),(0,A.jsx)("div",{className:(a?"loader-mini":"loader")+" hidden "+(n&&t?" ":"shown-fast "),children:h?"":(0,A.jsx)(c,{shaders:d,trackNum:e,getHDAA:this.getHDAA,className:"overlay"})})]})}constructor(e){super(e),this.audioFile=new Audio,this.contextClass=window.AudioContext||window.webkitAudioContext||window.mozAudioContext||window.oAudioContext||window.msAudioContext,this.audioContext=new this.contextClass,this.source=this.audioContext.createMediaElementSource(this.audioFile),this.audioData=this.audioContext.createAnalyser(),this.audioDataHD=this.audioContext.createAnalyser(),this.toggleVal=0,this.toggleLerp=null,this.hdState=null,this.aaState=null,this.toggleHide=()=>{this.setState({hide:!this.state.hide})},this.mp3Src=e=>"/media/mp3/"+this.props.TRACKLIST[e].source,this.setScreenOrientation=()=>{let e=this.getScreenOrientation();e!=this.state.orientation&&this.setState({orientation:e})},this.audioLoaded=()=>{setTimeout(()=>this.setState({audioLoaded:!0,audioLoadedOnce:!0},()=>{"playing"==this.audioState&&this.audioFile.play()}),this.props.DEMO_MODE?2:2e3)},this.audioEnded=()=>{let{DEMO_MODE:e}=this.props;this.state.trackNum<this.props.TRACKLIST.length-1&&!e?this.nextAudio():e&&(this.audioFile.currentTime=0,this.audioFile.play())},this.setCurTime=e=>{this.audioFile.currentTime=e,"running"==this.audioContext.state&&(this.audioFile.play(),this.audioState="playing")},this.initializeAudioAnalyser=()=>{this.playAudio()},this.setAudio=(e,n)=>{this.trackNum=e,this.audioFile.pause(),this.audioFile.src=this.mp3Src(e),this.audioFile.load();let t="/"+(e+1);window.history.replaceState({...window.history.state,as:t,url:t},"",t)},this.playAudio=()=>{this.audioFile.play(),this.audioContext.resume(),this.audioState="playing",this.state.clicked||this.setState({clicked:!0})},this.pauseAudio=()=>{this.audioFile.pause(),this.audioState="paused"},this.playPauseAudio=()=>{"playing"==this.audioState?this.pauseAudio():this.playAudio()},this.stopAudio=()=>{this.audioFile.stop(),this.audioState="stopped"},this.nextAudio=e=>{let{DEMO_MODE:n}=this.props;this.state.trackNum<this.props.TRACKLIST.length-1&&!n&&this.setState({trackNum:this.state.trackNum+1,audioLoaded:!1,loadVizzy:!1},()=>{this.setAudio(this.state.trackNum,e),setTimeout(()=>this.setState({loadVizzy:!0}),100)})},this.prevAudio=e=>{let{DEMO_MODE:n}=this.props;this.state.trackNum>0&&!n&&this.setState({trackNum:this.state.trackNum-1,audioLoaded:!1,loadVizzy:!1},()=>{this.setAudio(this.state.trackNum,e),setTimeout(()=>this.setState({loadVizzy:!0}),100)})},this.getTrackNum=()=>this.state.trackNum,this.freq2Index=e=>Math.ceil(e/(44100/(this.aaState?this.audioDataHD.fftSize:this.audioData.fftSize)/4)),this.melScale=e=>{this.aaState?this.audioDataHD.fftSize:this.audioData.fftSize;let n=[];for(let t=0;t<e.length;t++){let A=e[t]/255,o=(t/e.length+1)*A;n.push(o*o)}return n},this.getFrequencyData=()=>{let e=this.aaState?this.audioDataHD:this.audioData,n=e.frequencyBinCount,t=new Uint8Array(n);e.getByteFrequencyData(t);let A=this.freq2Index(120),o=this.freq2Index(1200),r=this.melScale(t),a=r.slice(0,A).reduce((e,n)=>e+n,0),i=r.slice(A,o).reduce((e,n)=>e+n,0),s=r.slice(o,n).reduce((e,n)=>e+n,0);return[a/A*1.5,i/(o-A)*1.5,s/(n-o)*1.5]},this.getAllFrequencyData=()=>{let e=this.aaState?this.audioDataHD:this.audioData,n=e.frequencyBinCount,t=new Uint8Array(n),A=new Uint8Array(n);return e.getByteFrequencyData(t),e.getByteTimeDomainData(A),t.reduce((e,n,t)=>e.concat([n,A[t]]),[])},this.incrementToggle=e=>{this.toggleVal<30&&"mini"==e?(this.toggleVal+=1,this.toggleLerp=setTimeout(()=>this.incrementToggle(e),33)):this.toggleVal>0&&"mini"!=e&&(this.toggleVal-=1,this.toggleLerp=setTimeout(()=>this.incrementToggle(e),33))},this.toggleStatus=e=>{this.setState({toggle:!this.state.toggle}),clearTimeout(this.toggleLerp),this.toggleLerp=setTimeout(()=>this.incrementToggle(e),33)},this.getToggleStatus=()=>1-this.toggleVal/30,this.getMiniToggleStatus=()=>this.toggleVal/30,this.getAudioState=()=>this.audioState,this.toggleHD=()=>{this.hdState=!this.hdState},this.toggleAA=()=>{this.aaState=!this.aaState,this.audioData=this.audioContext.createAnalyser(),this.audioData.fftSize=this.aaState?512:128,this.source.connect(this.audioContext.destination),this.source.connect(this.audioData)},this.getHDAA=()=>[this.hdState,this.aaState],this.getAudioData=()=>({playState:this.audioState,curTime:this.audioFile.currentTime,bpm:this.props.TRACKLIST[this.state.trackNum].bpm}),this.visualizer=e=>{let n=this.props.TRACKLIST.map(e=>e.component),t=Math.max(0,Math.min(n.length,e));return(0,A.jsx)(f,{trackNum:e,getAudioData:this.getAudioData,getAllFrequencyData:this.getAllFrequencyData,getFrequencyData:this.getFrequencyData,getHDAA:this.getHDAA,setCurTime:this.setCurTime,DEMO_MODE:this.props.DEMO_MODE,tex:this.props.tex,shaders:this.props.shaders,componentName:n[t]})},this.audioController=e=>(0,A.jsx)(s,{maxTrack:this.props.TRACKLIST.length-1,trackNum:this.state.trackNum,prevAudio:this.prevAudio,nextAudio:this.nextAudio,playAudio:this.playAudio,pauseAudio:this.pauseAudio,TRACKLIST:this.props.TRACKLIST,audioLoaded:this.state.audioLoaded,getAudioState:this.getAudioState,getHDAA:this.getHDAA,toggleHD:this.toggleHD,type:e,tex:this.props.tex,shaders:this.props.shaders,getToggleStatus:"mini"==e?this.getMiniToggleStatus:this.getToggleStatus}),this.audioState="running"==this.audioContext.state?"playing":"paused",this.audioFile.preload="auto",this.frequencyBandArray=[...Array(25).keys()],this.audioFile.src=this.mp3Src(e.FIRST_TRACK),this.audioFile.volume=e.volume,this.source.connect(this.audioContext.destination),this.audioData.fftSize=1024,this.audioData.maxDecibels=-2,this.source.connect(this.audioData),this.audioDataHD.fftSize=4096,this.audioDataHD.maxDecibels=-8,this.source.connect(this.audioDataHD),this.hdState=this.props.hdState,this.aaState=this.props.aaState,this.state={trackNum:e.FIRST_TRACK,audioLoaded:!1,webglLoaded:!0,ended:!1,audioLoadedOnce:!1,toggle:!1,hide:!1,loadVizzy:!1}}}var p=t(845);t(2090);let g=[{id:1,name:"Origin, Emergence, and The One",component:"Feedback",source:"origin.mp3",bpm:100},{id:2,name:"Ensemble",component:"Particles",source:"ensemble.mp3",bpm:140},{id:3,name:"Hoping",component:"Hoping",source:"hoping.mp3",bpm:136}];class m extends o.Component{componentDidMount(){if(!this.hasAnalyzer||!this.hasGL)return this.setState({curText:this.errorText}),null;this.imgCollection=this.loadImages(this.imgNames,this.imgSrcs,()=>{this.setState({imgLoaded:!0})}),document.body.onkeyup=e=>{e.preventDefault(),83==e.keyCode&&(this.skip=!0)},window.addEventListener("resize",this.resizeFeedback)}componentWillUnmount(){window.removeEventListener("resize",this.resizeFeedback)}loadImages(e,n,t){var A,o=e.length;let r=()=>0==--o&&t(),a={};for(A=0;A<e.length;A++){let t=a[e[A]]=new Image;t.src=n[A],t.onload=r}return a}clickMe(){this.setState({clicked:!0})}render(){let{loaded:e,curText:n,clicked:t,imgLoaded:o}=this.state,r=(0,A.jsx)(d,{FIRST_TRACK:this.FIRST_TRACK,DEMO_MODE:this.DEMO_MODE,TRACKLIST:this.TRACKLIST,clicked:t,hdState:this.hdState,aaState:this.aaState,tex:this.imgCollection,shaders:this.props.data.shaders,volume:this.volume}),a=t||this.SET_TRACK;return this.DEMO_MODE?o?r:"":(0,A.jsxs)("div",{className:"container",children:[(0,A.jsxs)("div",{className:"container intro hidden "+(a?" ":"shown "),children:[e&&o?(0,A.jsxs)("div",{id:"enterBtnDiv",children:[(0,A.jsx)("button",{id:"enterButton",onClick:()=>this.clickMe(),children:this.BUTTON_TEXT})," "]}):"",(0,A.jsx)("canvas",{ref:this.CANVAS_REF})]}),a&&o?r:""]})}constructor(e){super(e),this.FIRST_TRACK=0,this.hdState=!0,this.aaState=!0,this.volume=1,this.skip=!1,this.BUTTON_TEXT="CLICK TO START",this.errorText="Your device is not capable of communication. Please try again with a newer device.",this.textureImg=null,this.resizeTimer=null,this.hasGL=!0,this.hasAnalyzer=!0,this.getPlatformInfo=()=>{let e=(0,p.zN)();(0,p.Q4)();let n=(0,p.TI)();this.hasGL=!e.error,this.hdState=null!==e.card&&!n,this.aaState=!n},this.resizeFunc=()=>{document.body.classList.add("resize-animation-stopper"),clearTimeout(this.resizeTimer),this.resizeTimer=setTimeout(()=>{document.body.classList.remove("resize-animation-stopper")},400)};let{track:n,router:t}=this.props;this.router=t,this.getPlatformInfo(),this.SET_TRACK=!!n,this.FIRST_TRACK=this.SET_TRACK?n:this.FIRST_TRACK,this.FIRST_TRACK=parseInt(this.FIRST_TRACK),this.CANVAS_REF=o.createRef(),this.imgSrcs=Object.values(this.props.data.imgs),this.imgNames=Object.keys(this.props.data.imgs),this.TRACKLIST=g,this.DEMO_MODE=!1,this.state={loaded:!0,clicked:!1,curText:"",imgLoaded:!1}}}var v=m},9386:function(e,n,t){"use strict";var A=t(9268),o=t(6006);t(8431);var r=t(845),a=t(3543),i=a.bZ;class s extends o.Component{componentDidMount(){this.setup(),this.startRender()}componentWillUnmount(){this.unmount()}render(){return(0,A.jsx)("canvas",{ref:this.CANVAS_REF,width:"100%",height:"100%"})}constructor(e){var n;super(e),n=this,this.hdAA=[!1,!1],this.hdSize=1,this.nonHDSize=.5,this.pixRat=window.devicePixelRatio||1,this.mousePos={x:0,y:0},this.programs={},this.buffers={},this.textures={},this.programDefs={},this.bufferDefs={},this.textureDefs={},this.resizeBuffers=[],this.nextRenderFrame=null,this.nextFrame=1,this.numParticles=0,this.pointBufferInfo=null,this.canvasSize=()=>[this.gl.canvas.width,this.gl.canvas.height],this.handleMouseMove=e=>{this.mousePos=(0,r.yT)(e,this.CANVAS_REF.current)},this.createBuffer=(e,n)=>i.createFramebufferInfo(this.gl,void 0,e,n),this.createKeyBuffers=(e,n,t,A)=>{let o=!1,a=1,i=1;Array.isArray(t)&&2==t.length&&(0,r.hj)(t[0])&&(0,r.hj)(t[1])?(a=t[0],i=t[1],o=(0,r.Q7)(a)||(0,r.Q7)(i)):(0,r.hj)(t)?(a=t,i=t,o=(0,r.Q7)(t)):o=!0,o=A||o;let s=this.canvasSize();if(a*=o?s[0]:1,i*=o?s[1]:1,!n||n<2)this.buffers[e]=this.createBuffer(a,i);else{this.buffers[e]=[];for(var l=0;l<n;l++)this.buffers[e].push(this.createBuffer(a,i))}return o},this.setupParticleBuffer=()=>{let e=this.numParticles,n=0,t=0;if((0,r.hj)(e))n=e,t=1;else{if(!Array.isArray(e))return;n=e[0],t=e[1]}let A=[];for(let e=0;e<n;e++)for(let o=0;o<t;o++)A.push((e+.5)/n),A.push((o+.5)/t);this.pointBufferInfo=i.createBufferInfoFromArrays(this.gl,{position:{data:A,numComponents:2}})},this.setupBuffers=()=>{this.bufferInfo=i.primitives.createXYQuadBufferInfo(this.gl),this.setupParticleBuffer(),this.buffers={},this.resizeBuffers=[],Object.keys(this.bufferDefs).forEach(e=>{let n=this.bufferDefs[e];this.createKeyBuffers(e,n.num,n.size)&&this.resizeBuffers.push(e)})},this.setupPrograms=()=>{this.programs=a.DR(this.gl,this.props.shaders,this.programDefs)},this.setupTextures=()=>{this.textures=i.createTextures(this.gl,this.textureDefs)},this.setupGL=()=>{this.gl=this.CANVAS_REF.current.getContext("webgl",{depth:!1,antialiasing:!1}),this.gl.clearColor(0,0,0,1),this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!0)},this.setupUser=()=>{},this.setup=()=>{this.setupGL(),this.setupPrograms(),this.setupBuffers(),this.setupTextures(),this.setupUser()},this.unmount=()=>{this.nextFrame=-1,clearTimeout(this.nextRenderFrame),window.removeEventListener("mousemove",this.handleMouseMove)},this.startRender=()=>{requestAnimationFrame(this.renderGl)},this.renderLoop=e=>{},this.runProgram=function(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=o||n.bufferInfo;a._s(n.gl,e,t,i,A,r)},this.setHDAA=()=>{this.hdAA=this.props.getHDAA(),this.hdSize=this.hdAA[0]?1:this.nonHDSize,i.resizeCanvasToDisplaySize(this.gl.canvas,this.hdSize*this.pixRat)&&this.resizeBuffers.forEach(e=>{let n=this.buffers[e];Array.isArray(n)?n.forEach(e=>i.resizeFramebufferInfo(this.gl,e)):i.resizeFramebufferInfo(this.gl,n)})},this.renderGl=e=>{this.setHDAA(),this.renderLoop(e),this.nextFrame>0&&(this.nextRenderFrame=setTimeout(()=>requestAnimationFrame(this.renderGl),1))},this.pingPong=function(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(Array.isArray(t)){let A=t[0],o=t[1],r=n.buffers[e][A];n.buffers[e][A]=n.buffers[e][o],n.buffers[e][o]=r}else if(null===A){let t=n.buffers[e];n.buffers[e]=n.buffers[e],n.buffers[e]=t}else{let o=A[0],r=A[1],a=n.buffers[e][o];n.buffers[e][o]=n.buffers[t][r],n.buffers[t][r]=a}},this.CANVAS_REF=o.createRef(),this.state={render:!0},window.addEventListener("mousemove",this.handleMouseMove)}}n.Z=s},6368:function(e,n,t){"use strict";t.d(n,{Z:function(){return u}});var A=t(9268),o=t(6006),r=t(845);t(8431);var a=t(3543),i=t(2007);t(8599);class s extends o.Component{componentDidMount(){this.startRender()}render(){let{fps:e,curBar:n}=this.state,{reset:t}=this.props;return(0,A.jsxs)("div",{className:"wInfo",children:[(0,A.jsx)("div",{children:"FPS: "+e.toString()}),(0,A.jsx)("div",{children:"Bar: "+n.toFixed(2).toString()}),(0,A.jsx)("div",{children:(0,A.jsx)("button",{onClick:t,children:"RESET"})})]})}constructor(e){super(e),this.startRender=()=>{this.renderInfo()},this.renderInfo=e=>{this.setState(this.props.getInfo(),()=>{setTimeout(()=>{requestAnimationFrame(this.renderInfo)},50)})},this.state={fps:0,curBar:0}}}var l=t(9386);a.bZ;class c extends l.Z{componentDidMount(){this.sequencerUniformsOG=JSON.parse(JSON.stringify(this.sequencerUniforms)),this.setup(),this.startRender()}render(){let{DEMO_MODE:e}=this.props;return(0,A.jsxs)("div",{children:[(0,A.jsx)("canvas",{ref:this.CANVAS_REF,width:"100%",height:"100%"}),e?(0,A.jsx)(s,{getInfo:this.getInfo,reset:this.reset}):""]})}constructor(e){super(e),this.startBar=0,this.randomSeed=0,this.dt=0,this.prevTime=-1,this.prevTimeFPS=0,this.fps=0,this.curBar=0,this.loopBar=-2,this.loopStartBar=0,this.resetBtn=!0,this.audioData={},this.AUDIO_HIGH=0,this.AUDIO_MID=0,this.AUDIO_LOW=0,this.lmh=[0,0,0],this.nextRenderFrame=null,this.nextFrame=1,this.sequencerUniforms={},this.sequencerUniformsOG={},this.curKeyframe=-1,this.prevKeyframe=-1,this.keyframes={},this.evalObj=(e,n)=>{null==n&&(n=this.props.getAudioData().curTime+this.randomSeed);let t={};return Object.keys(e).forEach(A=>{let o=e[A];"function"==typeof o&&(o=o(n)),t[A]=o}),t},this.sequencer=()=>{let{audioData:e,prevTime:n,randomSeed:t}=this,A=!1;(n>e.curTime+t||this.resetBtn)&&(this.curKeyframe=-1,this.prevKeyframe=-1,this.resetBtn?this.sequencerUniforms=JSON.parse(JSON.stringify(this.sequencerUniformsOG)):(A=!0,this.sequencerUniforms=this.evalObj(this.sequencerUniforms,n)));let{keyframes:o,curKeyframe:r,prevKeyframe:a,curBar:s}=this;for(;s>r&&r>-2&&a<s;){if(r>-1){let a=o[r.toString()];for(var l=0;l<a.length;l++){let o=a[l],s=A?e.curTime:240*r/e.bpm;if(s+=t,"const"==o.type)this.sequencerUniforms[o.name]=o.val;else{let t=4*o.dur*60/e.bpm,A=this.evalObj(this.sequencerUniforms,n)[o.name];this.evalObj(this.sequencerUniforms)[o.name];let r=null==o.range[0]||"auto"==o.range[0]?A:o.range[0],a=null==o.range[0]?A+o.range[1]:o.range[1],l=o.phase?o.phase:0;this.sequencerUniforms[o.name]=i.cj[o.type](r,a,s,s+t,l)}}}a=r,this.prevKeyframe=a,r=(0,i.Nk)(Object.keys(o),r),this.curKeyframe=r}this.resetBtn=!1},this.handleMouseMove=e=>{this.mousePos=(0,r.yT)(e,this.CANVAS_REF.current)},this.setStartTime=()=>{let e=this.startBar>0?240*this.startBar/this.audioData.bpm-1:0;this.props.setCurTime(e)},this.reset=()=>{this.setStartTime(),this.resetBtn=!0},this.loopTrack=()=>{let e=240*this.loopStartBar/this.audioData.bpm;this.props.setCurTime(e)},this.startRender=()=>{this.props.DEMO_MODE&&setTimeout(()=>this.reset(),100),requestAnimationFrame(this.renderGl)},this.renderGl=e=>{this.setHDAA(),this.loopBar>-1&&this.curBar>=this.loopBar-.015&&this.loopTrack(),this.audioData=this.props.getAudioData(),this.seqUniEval=this.evalObj(this.sequencerUniforms);let n=e/1e3,{prevTimeFPS:t,prevTime:A}=this;this.prevTimeFPS=n,this.fps=.9*this.fps+.1*Math.ceil(1/(t?n-t:0)),this.curBar=this.audioData.curTime*this.audioData.bpm/60/4,"playing"==this.props.getAudioData().playState&&(this.sequencer(),this.renderLoop()),this.prevTime=this.audioData.curTime+this.randomSeed,this.renderAudio(),this.nextFrame>0&&(this.nextRenderFrame=setTimeout(()=>requestAnimationFrame(this.renderGl),1))},this.skipFrame=()=>{requestAnimationFrame(this.renderGl)},this.renderAudio=()=>{this.hdAA=this.props.getHDAA();let e=this.props.getFrequencyData();this.lmh=e,this.AUDIO_LOW=e[0],this.AUDIO_MID=e[1],this.AUDIO_HIGH=e[2]},this.getInfo=()=>({fps:this.fps,curBar:this.curBar}),this.audioData=this.props.getAudioData()}}var u=c},3175:function(e,n,t){"use strict";t.r(n),t(6006),t(8431);var A=t(3543),o=t(6368);A.bZ;class r extends o.Z{constructor(...e){super(...e),this.startBar=34,this.golScal=2,this.sequencerUniforms={CircleX:.1,CircleY:.7},this.keyframes={0:[{name:"CircleX",type:"sine",range:[-.5,.5],dur:9},{name:"CircleY",type:"cosine",range:[-.5,-.5],dur:9}],10:[{name:"CircleX",type:"sine",range:["auto",1],dur:4},{name:"CircleY",type:"cosine",range:[null,-1],dur:4}]},this.programDefs={programLife:["default.vs","life.fs"],programRandom:["default.vs","random.fs"],programCircle:["default.vs","circle.fs"],programAdd:["default.vs","add.fs"],programDisplay:["default.vs","default.fs"]},this.bufferDefs={gol:{num:4,size:[512*this.golScal,512*this.golScal]},bh:{num:1,size:null}},this.textureDefs={rand:{src:this.props.tex["rand.png"]},pebbles:{src:this.props.tex["pebbles.png"]}},this.golBufferSize=()=>this.bufferDefs.gol.size,this.setupUser=()=>{this.gl.clearColor(0,0,0,1),A._s(this.gl,this.programs.programRandom,{},this.bufferInfo,this.buffers.gol[0])},this.renderLoop=e=>{let{golBuffers:n,golBufferSize:t}=this,{gl:o,bufferInfo:r,seqUniEval:a,prevTime:i,audioData:s,lmh:l,textures:c,canvasSize:u,AUDIO_HIGH:h,AUDIO_MID:f,AUDIO_LOW:d}=this,{gol:p,bh:g}=this.buffers,{programLife:m,programRandom:v,programCircle:x,programDisplay:y,programAdd:C}=this.programs,b={u_texture:p[0].attachments[0],resolution:t(),iTime:s.curTime};A._s(o,m,b,r,p[2]);let S={resolution:t(),radius:.1*d,iTime:s.curTime,rand:c.rand,pebbles:c.pebbles,...a};A._s(o,x,S,r,p[3]);let B={resolution1:t(),resolution2:t(),tex1:p[2].attachments[0],tex2:p[3].attachments[0]};A._s(o,C,B,r,p[1]);let E={u_texture:p[1].attachments[0],resolution:u()};A._s(o,y,E,this.bufferInfo,o.canvas),this.pingPong("gol",[0,1])}}}n.default=r},7302:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return i}}),t(6006),t(8431);var A=t(3543);t(2007);var o=t(6368),r={0:[{name:"fisheye",type:"cosine",range:[0,1],dur:4},{name:"tunnelWidth",type:"cosine",range:[10,30],dur:4},{name:"fairyTime",type:"mono",range:[null,5],dur:4}],8:[{name:"tunnelBase",type:"const",val:.01},{name:"tunnelPos",type:"mono",range:[0,60],dur:1},{name:"fairyLight",type:"ease-in-out",range:[0,.5],dur:8}],20:[{name:"fairyLight",type:"ease-in-out",range:["auto",0],dur:3.75}],22:[{name:"tunnelLight",type:"ease-in-out",range:[1,0],dur:1.825},{name:"tunnelBase",type:"ease-in-out",range:[.1,0],dur:1.75}],24:[{name:"creatureXY",type:"const",val:[0,0]},{name:"tunnelBase",type:"const",val:.01},{name:"tunnelPos",type:"mono",range:[0,30],dur:1},{name:"tunnelWidth",type:"const",val:24}],32:[{name:"fairyLight",type:"const",val:1}],36:[{name:"tunnelLight",type:"ease-in-out",range:[0,1],dur:4}],40:[{name:"tunnelLight",type:"ease-in-out",range:[1,0],dur:7.5},{name:"tunnelBase",type:"ease-in-out",range:["auto",0],dur:7.5},{name:"creatureLight",type:"cosine",range:[0,.5],dur:4},{name:"rayUp",type:"ellipse",range:[1,-1],dur:4},{name:"creatureTwist",type:"linear",range:[0,2],dur:8}],48:[{name:"rayUp",type:"const",val:[1,0]},{name:"tunnelLight",type:"const",val:.5},{name:"creatureLight",type:"const",val:1},{name:"tunnelPos",type:"mono",range:[null,150],dur:1},{name:"fisheye",type:"const",val:-.2},{name:"tunnelWonky",type:"linear",range:[0,-1],dur:8},{name:"tunnelWidth",type:"ease-in",range:["auto",30],dur:2}],52:[{name:"checker",type:"ease-in",range:["auto",25.99],dur:4}],56:[{name:"tunnelBase",type:"ease-in-out",range:[.1,0],dur:8},{name:"wingRot",type:"ease-out",range:[0,-1],dur:.33},{name:"fairyLight",type:"const",val:0},{name:"tunnelWonky",type:"cosine",range:[-1,1],dur:2},{name:"creatureFlip",type:"ease-in-out",range:[0,1],dur:2}],58:[{name:"creatureFlip",type:"ease-in-out",range:[0,-1],dur:2}],60:[{name:"creatureTwist",type:"ease-in-out",range:[0,-1],dur:.5}],61:[{name:"wingRot",type:"ease-in-out",range:[0,1],dur:.5}],62:[{name:"creatureTwist",type:"ease-in-out",range:[0,1],dur:1}],63:[{name:"rayUp",type:"ellipse",range:[1,-1],dur:.5}],64:[{name:"rayUp",type:"const",val:[1,0]},{name:"tunnelPos",type:"mono",range:[null,50],dur:1},{name:"creatureFlip",type:"ease-in-out",range:[0,-1],dur:1},{name:"tunnelWonky",type:"cosine",range:[-1,1],dur:1},{name:"wingRot",type:"ease-in-out",range:[0,-1],dur:1},{name:"rayUp",type:"const",val:[1,0]}],66:[{name:"creatureTwist",type:"ease-in-out",range:[0,-1],dur:2}],67:[{name:"wingRot",type:"ease-in-out",range:[0,1],dur:1}],68:[{name:"creatureTwist",type:"ease-in-out",range:[0,1],dur:1}],69:[{name:"creatureFlip",type:"ease-in-out",range:[0,-1],dur:1}],70:[{name:"tunnelPos",type:"mono",range:[null,100],dur:1},{name:"checker",type:"ease-out",range:["auto",.99],dur:6},{name:"wingRot",type:"ease-in-out",range:[0,-1],dur:3}],74:[{name:"creatureFlip",type:"ease-in-out",range:[0,-2],dur:2.75}],"76.75":[{name:"creatureFlip",type:"ease-in-out",range:[0,1],dur:.75},{name:"wingRot",type:"ease-in-out",range:[0,-1],dur:.75}],78:[{name:"creatureFlip",type:"ease-in-out",range:[0,2],dur:1.375}],"79.375":[{name:"creatureTwist",type:"ease-in-out",range:[0,-1],dur:.75},{name:"wingRot",type:"ease-in-out",range:[0,-1],dur:.75}],80:[{name:"fairyLight",type:"const",val:1},{name:"tunnelWonky",type:"ease-in-out",range:["auto",0],dur:1},{name:"tunnelPos",type:"mono",range:[null,50],dur:1},{name:"fairyTime",type:"mono",range:[null,2.5],dur:4}],88:[{name:"tunnelLight",type:"ease-in-out",range:["auto",.001],dur:8}],96:[{name:"rayUp",type:"ellipse",range:[1,-1],dur:4},{name:"tunnelPos",type:"mono",range:[null,25],dur:1},{name:"fairyTime",type:"mono",range:[null,1],dur:4}],104:[{name:"rayUp",type:"ellipse",range:[1,-1],dur:2},{name:"fairyTime",type:"mono",range:[null,2.5],dur:4},{name:"checker",type:"ease-out",range:["auto",31.99],dur:8},{name:"creatureTwist",type:"mono",range:[0,1],dur:2},{name:"tunnelWidth",type:"ease-in-out",range:["auto",40],dur:8},{name:"tunnelPos",type:"mono",range:[null,100],dur:1},{name:"tunnelLight",type:"ease-in-out",range:["auto",1],dur:8}],112:[{name:"rayUp",type:"ellipse",range:[1,1],dur:2},{name:"fairyTime",type:"mono",range:[null,10],dur:4},{name:"creatureFlip",type:"mono",range:[0,1],dur:1.5},{name:"fisheye",type:"cosine",range:[0,4],dur:1},{name:"tunnelWonky",type:"sine",range:[-2,2],dur:3},{name:"tunnelPos",type:"mono",range:[null,200],dur:1}],115:[{name:"wingRot",type:"ease-in-out",range:[0,-1],dur:.75}],117:[{name:"wingRot",type:"ease-in-out",range:[0,1],dur:.75}],"118.75":[{name:"wingRot",type:"ease-in-out",range:[0,-1],dur:.5}],120:[{name:"wingRot",type:"ease-in-out",range:[0,-1],dur:.75},{name:"fairyTime",type:"mono",range:[null,6],dur:8},{name:"fisheye",type:"const",val:0},{name:"tunnelPos",type:"mono",range:[null,100],dur:1},{name:"rayUp",type:"ellipse",range:[1,1],dur:4}]};A.bZ;class a extends o.Z{constructor(e){super(e),this.startBar=56,this.sequencerUniforms={tunnelPos:0,fisheye:0,creatureXY:[1e3,0],tunnelLight:1,tunnelBase:0,createLight:0,wingRot:0,creatureFlip:0,fairyLight:1,tunnelWonky:0,tunnelWidth:10,checker:0,fairyTime:0,rayUp:[1,0]},this.keyframes=r,this.programDefs={programSkin:["default.vs","skin.fs"]},this.textureDefs={rand:{src:this.props.tex["rand.png"]},pebbles:{src:this.props.tex["pebbles.png"]}},this.bufferDefs={skinBuffer:{}},this.setupUser=()=>{},this.renderLoop=e=>{let{gl:n,bufferInfo:t,prevTime:o,textures:r,audioData:a,lmh:i,AUDIO_HIGH:s,AUDIO_MID:l,AUDIO_LOW:c,seqUniEval:u}=this,{skinBuffer:h}=this.buffers,{programSkin:f}=this.programs,d={...u,iTime:a.curTime,iChannel0:r.pebbles,randSampler:r.rand,iResolution:[n.canvas.width,n.canvas.height],iAudio:i,HD:this.hdAA[0]};A._s(n,f,d,t,n.canvas)}}}var i=a},8264:function(e,n,t){"use strict";t.r(n),t(6006),t(8431);var A=t(3543);t(2007);var o=t(6368),r=A.bZ;class a extends o.Z{constructor(...e){super(...e),this.startBar=32,this.randomSeed=999999*Math.random(),this.n=1024,this.m=1024,this.timeMult=3,this.temp=null,this.sequencerUniforms={feedback1:0,feedback2:0,lightXY:[1,0],specularHardness:70,feedbackScale:1,lightHue:0,secondLight:0,hueShift:0,satMult:1},this.keyframes={0:[{name:"feedback1",type:"sine",range:[-.001,.002],dur:2.5},{name:"feedback2",type:"cosine",range:[.001,0],dur:3.5},{name:"lightXY",type:"ellipse",range:[1,1],dur:4},{name:"specularHardness",type:"sine",range:[55,85],dur:6},{name:"lightHue",type:"mono",range:[.5,1.5],dur:7}],64:[{name:"satMult",type:"const",val:0},{name:"hueShift",type:"mono",range:[0,1],dur:16}]},this.programDefs={programInit:["particleInit.vs","particleInit.fs"],programPhysics:["particlePhysics.vs","particlePhysics.fs"],programDraw:["particleDraw.vs","particleDraw.fs"],programEncode:["default.vs","encode.fs"],programFeedback:["default.vs","feedback.fs"],programDisplay:["default.vs","extract.fs"],programBlack:["default.vs","black.fs"],programBlur:["default.vs","blur.fs"],programLookup:["default.vs","lookup.fs"],programPhong:["default.vs","phong.fs"],programAdd:["default.vs","composite.fs"],programCopy:["default.vs","copy.fs"]},this.bufferDefs={pos:{num:2,size:[this.n,this.m]},vel:{num:2,size:[this.n,this.m]},fb:{num:4}},this.numParticles=[this.n,this.m],this.setupUser=()=>{let{gl:e,programs:n,buffers:t}=this,{n:o,m:r}=this;A._s(e,n.programInit,{pass:0},this.bufferInfo,t.pos[0]),A._s(e,n.programInit,{pass:1},this.bufferInfo,t.vel[0])},this.renderLoop=e=>{let{programInit:n,programPhysics:t,programDraw:o,programFeedback:a,programDisplay:i,programBlack:s,programBlur:l,programLookup:c,programPhong:u,programAdd:h,programCopy:f,programEncode:d}=this.programs,{pos:p,vel:g,fb:m}=this.buffers,{gl:v,bufferInfo:x,canvasSize:y,prevTime:C,audioData:b,randomSeed:S,seqUniEval:B,hdSize:E,AUDIO_HIGH:D,AUDIO_MID:I,AUDIO_LOW:w}=this,{n:k,m:T,pointBufferInfo:F,posBufferInfo:O}=this;if(r.resizeCanvasToDisplaySize(v.canvas,window.devicePixelRatio*E||E)){r.resizeFramebufferInfo(v,m[2]);let e={resolution:y(),u_texture:m[1].attachments[0]};A._s(v,f,e,x,m[2]),r.resizeFramebufferInfo(v,m[1]);let n={resolution:y(),u_texture:m[2].attachments[0]};A._s(v,f,n,x,m[1]),r.resizeFramebufferInfo(v,m[0]),r.resizeFramebufferInfo(v,m[3])}v.viewport(0,0,v.canvas.width,v.canvas.height);let _={resolution:y(),u_pheromones:m[1].attachments[0],u_position:p[0].attachments[0],u_velocity:g[0].attachments[0],time:b.curTime/this.timeMult+S+3*I,pass:0};A._s(v,t,_,x,g[1]),A._s(v,t,{pass:1},x,p[1]),v.useProgram(s.program),r.setBuffersAndAttributes(v,s,x),r.bindFramebufferInfo(v,m[3]),v.clear(v.COLOR_BUFFER_BIT),r.drawBufferInfo(v,x),v.enable(v.BLEND);let R={u_texture:p[1].attachments[0],HD:this.hdAA[0]};A._s(v,o,R,F,m[3],"points"),v.disable(v.BLEND);let L={resolution:y(),u_texture:m[3].attachments[0],...B};A._s(v,d,L,x,m[2]);let Q={resolution:y(),u_texture:m[1].attachments[0],pass:0};A._s(v,l,Q,x,m[3]);let q={resolution:y(),u_texture:m[3].attachments[0],pass:1};A._s(v,l,q,x,m[1]),v.useProgram(s.program),r.setBuffersAndAttributes(v,s,x),r.bindFramebufferInfo(v,m[0]),v.clear(v.COLOR_BUFFER_BIT);let M={resolution:y(),u_prevFrame:m[1].attachments[0],u_curFrame:m[2].attachments[0],HD:this.hdAA[0],...B};A._s(v,a,M,x,m[0]);let z={resolution:y(),u_texture:m[0].attachments[0],multiplier:.7+.8*Math.pow(I,.5)};A._s(v,c,z,x,m[3]);let j={resolution:y(),u_texture:m[0].attachments[0],intensity:100,specularPower:30*(D+.01),diffusePower:0,viewDir:[0,0,-1],...B};A._s(v,u,j,x,m[2]);let V={resolution:y(),u_texture:m[2].attachments[0],u_add:m[3].attachments[0],time:b.curTime/10,saturation:5*w,...B};A._s(v,h,V,x,v.canvas),this.pingPong("pos",[0,1]),this.pingPong("vel",[0,1]),this.pingPong("fb",[0,1])}}}n.default=a},2007:function(e,n,t){"use strict";t.d(n,{Nk:function(){return o},cj:function(){return A}});var A={const:function(e){return e},linear:function(e,n,t,A){return o=>o<t?e:o>A?n:(o-t)*(n-e)/(A-t)+e},mono:function(e,n,t,A){return o=>(o-t)*(n-e)/(A-t)+e},"ease-in":function(e,n,t,A){return o=>o<t?e:o>A?n:Math.sin(Math.PI/2*(o-t)/(A-t))*(n-e)+e},"ease-out":function(e,n,t,A){return o=>o<t?e:o>A?n:(1-Math.cos(Math.PI/2*(o-t)/(A-t)))*(n-e)+e},"ease-in-out":function(e,n,t,A){return o=>o<t?e:o>A?n:(1+Math.cos(Math.PI*((o-t)/(A-t)+1)))/2*(n-e)+e},cosine:function(e,n,t,A){return o=>(1+Math.cos(Math.PI*((o-t)/(A-t)+1)))/2*(n-e)+e},sine:function(e,n,t,A){return o=>(1+Math.sin(Math.PI*(o-t)/(A-t)))/2*(n-e)+e},ellipse:function(e,n,t,A,o){return r=>[e*Math.cos(Math.PI*((r-t)/(A-t)+o)),n*Math.sin(Math.PI*((r-t)/(A-t)+o))]}},o=(e,n)=>{let t=e.map(e=>parseFloat(e));return((t=t.filter(e=>e>n)).sort(function(e,n){return e-n}),t.length>0)?t[0]:-10}},845:function(e,n,t){"use strict";function A(e){return Number(e)===e&&e%1!=0}function o(e){return Number(e)===e}t.d(n,{Q4:function(){return s},Q7:function(){return A},TI:function(){return i},hj:function(){return o},yT:function(){return a},zN:function(){return l}});var r=function(e,n){var t=(n=n||e.target).getBoundingClientRect();return{x:e.clientX-t.left,y:e.clientY-t.top}},a=function(e,n){n=n||e.target;var t=r(e,n);return t.x=t.x*n.width/n.clientWidth,t.y=t.y*n.height/n.clientHeight,t},i=function(){let e=!1;if("undefined"!=typeof navigator){var n;n=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4)))&&(e=!0)}return e},s=function(){return new(window.AudioContext||window.webkitAudioContext||window.mozAudioContext||window.oAudioContext||window.msAudioContext),{}},l=function(){let e=document.createElement("canvas"),n=e.getContext("webgl");if(!n)return e.remove(),{error:"NO WEBGL"};let t=n.getExtension("WEBGL_debug_renderer_info");if(!t)return e.remove(),{card:null};{let A=function(e,n){let t=n.match(e);return t&&t[0]}(/((NVIDIA|AMD)[^\d]*[^\s]+)/,n.getParameter(t.UNMASKED_RENDERER_WEBGL));return e.remove(),{card:A}}}},3543:function(e,n,t){"use strict";t.d(n,{DR:function(){return a},_s:function(){return i},bZ:function(){return A}});var A=t(8459);let o=(e,n)=>Object.fromEntries(Object.entries(e).map((e,t)=>{let[A,o]=e;return[A,n(o,A,t)]}));function r(e){e.split("\nError compiling FRAGMENT_SHADER: ERROR: ")[1];let n=e.indexOf("^^^ ERROR:");console.log(e.substring(Math.max(0,n-500),Math.min(e.length,n+500)))}var a=function(e,n,t){return o(t,t=>{var o,a;return o=t[0],a=t[1],A.createProgramInfo(e,[n[o],n[a]],r)})},i=function(e,n,t,o,r){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;e.useProgram(n.program),A.setBuffersAndAttributes(e,n,o),A.setUniforms(n,t),A.bindFramebufferInfo(e,r),a?A.drawBufferInfo(e,o,e.POINTS):A.drawBufferInfo(e,o)}},9647:function(){},9620:function(){},7733:function(){},9601:function(){},8599:function(){},8909:function(){},3177:function(e,n,t){"use strict";/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var A=t(6006),o=Symbol.for("react.element"),r=(Symbol.for("react.fragment"),Object.prototype.hasOwnProperty),a=A.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i={key:!0,ref:!0,__self:!0,__source:!0};function s(e,n,t){var A,s={},l=null,c=null;for(A in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(c=n.ref),n)r.call(n,A)&&!i.hasOwnProperty(A)&&(s[A]=n[A]);if(e&&e.defaultProps)for(A in n=e.defaultProps)void 0===s[A]&&(s[A]=n[A]);return{$$typeof:o,type:e,key:l,ref:c,props:s,_owner:a.current}}n.jsx=s,n.jsxs=s},9268:function(e,n,t){"use strict";e.exports=t(3177)},2090:function(e,n,t){let{webm:A,mp4:o}=t(8456),r=()=>"undefined"!=typeof navigator&&10>parseFloat((""+(/CPU.*OS ([0-9_]{3,4})[0-9_]{0,1}|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent)||[0,""])[1]).replace("undefined","3_2").replace("_",".").replace("_",""))&&!window.MSStream,a=()=>"wakeLock"in navigator;e.exports=class{constructor(){if(this.enabled=!1,a()){this._wakeLock=null;let e=()=>{null!==this._wakeLock&&"visible"===document.visibilityState&&this.enable()};document.addEventListener("visibilitychange",e),document.addEventListener("fullscreenchange",e)}else r()?this.noSleepTimer=null:(this.noSleepVideo=document.createElement("video"),this.noSleepVideo.setAttribute("title","No Sleep"),this.noSleepVideo.setAttribute("playsinline",""),this._addSourceToVideo(this.noSleepVideo,"webm",A),this._addSourceToVideo(this.noSleepVideo,"mp4",o),this.noSleepVideo.addEventListener("loadedmetadata",()=>{this.noSleepVideo.duration<=1?this.noSleepVideo.setAttribute("loop",""):this.noSleepVideo.addEventListener("timeupdate",()=>{this.noSleepVideo.currentTime>.5&&(this.noSleepVideo.currentTime=Math.random())})}))}_addSourceToVideo(e,n,t){var A=document.createElement("source");A.src=t,A.type=`video/${n}`,e.appendChild(A)}get isEnabled(){return this.enabled}enable(){return a()?navigator.wakeLock.request("screen").then(e=>{this._wakeLock=e,this.enabled=!0,console.log("Wake Lock active."),this._wakeLock.addEventListener("release",()=>{console.log("Wake Lock released.")})}).catch(e=>{throw this.enabled=!1,console.error(`${e.name}, ${e.message}`),e}):r()?(this.disable(),console.warn(`
        NoSleep enabled for older iOS devices. This can interrupt
        active or long-running network requests from completing successfully.
        See https://github.com/richtr/NoSleep.js/issues/15 for more details.
      `),this.noSleepTimer=window.setInterval(()=>{document.hidden||(window.location.href=window.location.href.split("#")[0],window.setTimeout(window.stop,0))},15e3),this.enabled=!0,Promise.resolve()):this.noSleepVideo.play().then(e=>(this.enabled=!0,e)).catch(e=>{throw this.enabled=!1,e})}disable(){a()?(this._wakeLock&&this._wakeLock.release(),this._wakeLock=null):r()?this.noSleepTimer&&(console.warn(`
          NoSleep now disabled for older iOS devices.
        `),window.clearInterval(this.noSleepTimer),this.noSleepTimer=null):this.noSleepVideo.pause(),this.enabled=!1}}},8456:function(e){e.exports={webm:"data:video/webm;base64,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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK",mp4:"data:video/mp4;base64,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"}}}]);